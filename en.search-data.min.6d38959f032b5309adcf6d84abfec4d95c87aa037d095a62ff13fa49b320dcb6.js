'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/docs/mechanics/','title':"Mechanics",'content':"Game Design The game offers several main aspects of gameplay that the player can perceive, taking into account the always valid manifesto statements. In addition, the concept of the open world should open up an emergent game principle.\nHere concrete realizations of central game elements are described. Contrary to the rough guidelines of the manifesto, the discussion and description of a concrete game feature is already at stake here. The specification of the respective feature should be described as exactly as possible in order to make an easy implementation possible. The list will be constantly updated and extended.\nThis document describes the core thoughts and principals under which all game design choices should be oriented and challenges.\nCore Concepts  It is best practice to stick as close as possible to the design principles described in the next section about the core concepts.\n Consistent Fantasy Simulation We want to tell a story, a story the players forge and form by themselves. We must provide a world, an environment in which this is made possible. The game should motivate the players to explore and test their creativity for solving problems. Nothing frustrates more then to solve riddles only by bruteforcing the answers. All the things inside the world should be explainable by in-universe theories and follow certain logic patterns. There should be no magic User Interface which will teleport the player to the next Dungeon and destroy the immersive fantasy. The player should be motivated to solve this problems by himself maybe by finding a friendly other character class which is able to open portals. Interaction between players is highly encouraged to solve problems.\nA Single Universe We all live on the same planet. So do we really need multiple servers? Multiple servers tear the community apart. Of course it is technically more challenging to connect all players through a common game world. But this challenge has to be met. One community further encourages interaction between the players.\nStable Mechanics In modern games players are kept encouraged by constantly changing the game mechanics. These poor design choices makes it hard for players to came back into the game after a long pause. Most mechanics have changed and must be adaptes first leading to frustration. Players slowly understanding the mechanics will put into a constant re-learning when the patches changes the mechanics. Bestia will strictly strive for preserving once established gameplay mechanics and makes them as resistant as possible against patches.\n Interesting long term challenges have to be implemented via a immersive gameplay world. Bugs and balancing problems will be patched of course.\n Encouraging Social Interaction Many game mechanics should only be possible through interaction with other players. Rituals that require multiple players, even the help of multiple character classes should be the norm rather than the exception. Single players should of course also be able to enjoy the game. Nevertheless the name is MMORPG Program. The full potential of the game can and should only be experienced through interaction with other people. This promotes a cohesion in the community of the players. By these promoted social contacts the players are bound more strongly to the game itself.\nAdvanced Crafting Items are usually not obtained by killing monsters (we remember: fantasy realism.) Do wolves carry swords? Probably not. They have to be made. Usually only raw materials are found on maps. Almost all equipment is manufactured or purchased from NPCs. NPC dealers only have a limited stock of goods. These must first be restored and delivered. This leads to the establishment of trade routes. The price is determined by supply and demand. NPC should try to get a profit maximization for themselves. Players must be able to participate in this cycle of goods as easily as possible, both as a producer and as a consumer.\nThe professions are described in the Skills and Attacks section.\nModern Artifical Intelligence The game contains a modern, incredibly powerful AI. The world and its inhabitants should look incredibly alive with it. Bestias and NPC follow a daily routine and pursue their own goals. The player should be able to recognize patterns and interact with them by observing them. The NPCs react in the same way to influences by the player. NPCs should be able to travel long distances and not be available for the player for some time.\nRich And Immersive History The story and history should be rich in detail and deep and immersive. But its not necessairly important to be always totally serious. Yet it must be generic enough to get pre-computed to some degree when the world is calcualted. Instead the story should keep its own sense of strange, nerdy humor. Character development and ingame experiences should be tied to certain storys or quests. E.g. taking gameplay choices only by clicking a certain UI button is discouraged.\nMeet Real World Expectation The environment should stick to real world expectation, can you open a door also by destroying it? Sure! Why should this not also work in games? - The simulated world of Bestia should stick to the principles and expectations of the real world. With this help player can think of funny and motivating workarounds and solutions to solve problems in game.\nGame Mechanics The main story revolves around the player whose world was destroyed due to a so-called Rift Event. The magic pushed into his world and merged it with another one. This altered the physical properties of both worlds and mostly destroyed them in the process.\nThe player is thrown into a new world and must learn to survive on his own (while exploring the new world, gathering resources, making friends and foes).\nThe principle of destroying the world is the common thread throughout the game. By joining one of the different cults the players can actively work towards a destruction of the world or preventing it from harm (see The Cults for more information).\nDue to this event the world is generated dynamically. Despite the ultimate goal of the game to prevent or initiate this destruction, this should remain a rare event that occurs no more frequently than every 1 to 2 years (in real time). The newly generated world should cover as wide a spectrum of biomes as possible. The world and its inhabitants embed themselves in a certain history, which should also be generated as automatically as possible. This enriches the player experience especially in the beginning when there are not many players.\nFor the details of world generation, see the technical documentation.\nPostal System Based on World of Warcraft, a postal system is to be established. The system should make it possible to send letters, but above all items and money to other players and places. And is also important for the player quest system as mostly quest rewards will need to be delived via a postal system).\nLike the rest of the game this should be solved by an ingame system. There should be NPCs which will take care of delivering postal services and players should setup Bestias in order to perform this delivery. This can be a quest on its own. If there is no player taking care in time for this delivery there should be always an NPC showing up taking care of the delivery, then the reward is lost.\nThe postal fee is defined by:\n  \\[ price = 0.01g \\cdot km \\cdot m_{kg}\\\\ deliver_{time} = 8h \u0026#43; km / 10\\]  The player can decide to insure his delivery which will setup a teleport spell on the item if its not looted but the postman is killed which will deliver it towards the target destination. But this will take another 0.5-1 days in real time before the item will then be available at the target location.\nGold and text only messages can be send via a special telegram system which is very hard to intercept. But the fee is 3 times the usual price (but gold has no ingame weight, so you are allowed to carry as much as you want).\nThe Cults In each Bestia World there are 2-3 cults to which the Bestia summoners can belong. When creating the world, the existing cults are chosen randomly. At least one cult should aim for the destruction of the world, the other should prevent it. Optionally there are some neutral cults that pursue their own goals which do not deal with the destruction of the world. These cults should not exist in every world iteration.\nThe cults are ultimately a faction. The goal is to be able to play these factions among themselves. Usually players can fight against each other at any time, but the rivalries should take place between the cults. To this end, game mechanics must be established that in a certain way grant the individual cults an additional bonus in a collaborative approach and thus offer playful incentives to actively intervene in the game.\nPlayers can invest into their cults citadelle. Only one citadel can exist at the time but players are free to build as many temples as they want, where they can access the services of their cult. The interesting thing is that some of the archivements by the cults will remain active when the world is replaced by a new one. So these cults help a lot when players want to keep their wealth during a world destruction event.\nPlayers should be able to change cults. However, this will be sanctioned with a difficult task and will be associated with various disadvantages.\nCitadels and Temples The order can research powerful spells and devices which the players can then learn or access to accomplish their goal.\nThe Chaos The Chos tries to inflict destruction and to speed up the worlds downfall, as they believe the mana influx is the fate every world must face finally. They try to mass the amount of mana, open rifts in remote legions to form the world after their twisted image until it goes down in flames.\nThe Order This cult is the preserving one. They belive in stability and try to stop the ongoing destruction of the worlds. Their ultimate goal is to bring an end to the influx of mana. Thus they research a lot of spells to remove and control the mana influx and rifts.\nCult Advantages It would be conceivable that special land areas fall under the influence of a certain cult. This would attract certain Bestias that are friendly to the cult members. Special resources are generated or more Mana rifts are opened and the Mana within the country increases there. Furthermore, the prevailing faction can be rewarded with a global bonus. Additional EXP bonuses would be conceivable.\nArchivements If a player manages to archive a certain goal then he will be awarded an archivement. These archivements are listed ingame so the player can view them. It is also possible for other players to access the players archivements.\nThere are archivements which are unique to a single world and other which every player can reach for his own. World archivements are saved with the world they were acquired and are reset (they can be re-acuired by another player if the world is re-created). The date + the name of the world in which the success was achieved always remains in the history for a player.\nThis list is far from completed! New ideas and suggestions are welcomed. Please open an issue for new ideas.\n   Archivement Type Description     Master of 10 Bestias Individual  The player has owned 10 Bestias.   Master of 100 Bestias Individual  The player has owned 100 Bestias.   Master of 1000 Bestias Individual  The player has owned 1000 Bestias.   Officer Individual  Killing 10 players with Rogue debuf.   Sheriff Individual  Killing 50 players with Rogue debuf.   Marshall Individual  Killing 100 players with Rogue debuf.    Auction House Trading is an important mechanic and allows player to exchange goods as the whole Bestia economy is player driven. Players can create auction hauses which can be used in order to perform trades while they are offline themselves.\nIf an auction house was build by a player or a guild no other auction house can be build in a 300m radius. The player can decide the auction fee between 1% - 10% for new auctions. This fee is collected in the auction house and must be collected by the owners. Players can then use the auction house to sell their items by listing them. Either they set them up for a fixed price of do an auction. The decide between 1 (80% fee), 2 (100% fee), 3 (120% fee) or 5 (140% fee) days length for the auction.\nAuction houses of different owners can be linked in order to display the shared auctions. If a player wins an auction the item is delivered via postal service to the player if he decides to pay the delivery fee. The item is then send via the regular postal service from the linked auction house.\nIf the player does not pay the fee the item is withheld for him up to 10 days until it is returned to his owner (who can keep the price payed for the item from the player who did not collect his item).\nCurrency All the ingame currency is made from gold found by the players. Yes you have heard it right the players must harvest gold deposites in order to make their own money. Gold can directly be turned into gold coins.\nIn order to start the economy the NPC have 10% of the available world wealth in gold. This wealth is re-distributed equally between every NPC every night. This mechanic is one of the few that have no underlying real world logic.\nHonor It is possible in Bestia to perform malicious actions which will reduce the players good experience. This is by design! Yet there should be incentives for players not to go this route in order to protect low level players from ganking of other griev play. If a player behaves well and their honor level increases they will get more and more rewards. On the other hand if a player has negative honor they will get bad reputation and repressions. There might actually be some player initiated hunt on these low honor players.\nAdditionally each NPC maintains an internal list of reputation points and players. If a player misbehaves or behaves in a friendly way, this list will be adjusted. The NPC also communicates this list with other NPCs if they meet. If the reputation exceeds certain upper and lower limits and the NPC enters areas that use a long-distance communication system, the NPC may also communicate this to more distant areas. Only if the players reputation falls below -100 the NPC encountered (and acted negative towards them) they remembers this permanently. Higher values slowly return to the default value of 0 and are then removed from the list (NPCs don\u0026rsquo;t forget if a player killed family members or the NPC life was saved). If the customer reaches the nearest settlement via the reputation points after a certain time, the value is also stored there permanently.\nReputation decreases faster through bad deeds than increasing because of good ones.\nProtected Zones Around the starting places there will be a enchantment in place which will mark the lands in the vacinity as Protected Zones. Inside this zone every kill of another player Bestia with more then 5 levels less as the killing bestia or NPC will reduce the honor by 20 points.\nEvery action which leads to honor loss inside a protected zone (other then killing a low level Player Bestia) will be multiplied by 3 wheras honor increasing actions will be multiplied by 1.5.\nNegative Honor As there are multiple factions which different interests it is not easy to define which play is considered bad behavior which will get punished automatically. Yet there are some core actions which will be universally be considered as griev play which is not inherently forbidden but will result in a loss of honor.\nIf a player drops below 0 honor he will receive the debuff Rogue. If a player has less then -100 honor he will receive the debuff Outlaw.\nStealing Stealing means if a player picks up an item from a storage chest not belonging to him. The owner can also grant certain player access right to a chest. Then its not considered stealing. A guild leader can also mark storage chests as usable for guild members.\nA player who steals an item is also marked with the debuff Thief which will grant any player who kills him 5 extra honor. The killing player also gets a honor reward for each item returned to the original owner of the items within 6 real time hours (18 hours in Bestia time).\nMalicious Actions    Malicious Action Honor Loss (Player) Honor Loss to NPC in Sight     Killing a NPC -5 -15   Killing Players Bestias 0 -2   Killing Players Bestias in a Protected Zone -20 -20   Stealing Item (Mundane) -5 -10   Stealing Item (Superior) -10 -20   Stealing Item (Legendary) -15 -50    Negative Honor Effects If the honor drops below 0 the negative effects will start to take place. The effects are as follows:\n   Honor Amount Effect     \u0026lt; 0 No more advantages from NPC and the NPC will act unfriendly against the player.   \u0026lt; -50 Some NPC might start to act hostile and attack the player or flee from him.   \u0026lt; -100 NPC will permanently remember the player and also spread the word around so more NPC will start to act hostile towards the player.    If a player steals something not belonging to him but to a NPC or another player he will loose honor for each item he takes and depending on the item level (looting a dead NPC/player will not lead to a reduction of honor).\nPositive Honor A positive honor level will lead to very friendly NPC which might even give the player some discounts or gifts from time to time. In order to increase your honor level again you can:\n Kill a player with negative honor Helping a NPC by healing or resurrecting a dead NPC Doing Quests  Shrines of Judgement There are a 5 shrines in each game world incarnation where a player can sacrifice to raise a reputation that has fallen below the threshold of a player\u0026rsquo;s global persecution. The sacrifice is usually (depending on the reputation threshold) very painful and even if it was made it can take several days until the news about it was spread.\n"});index.add({'id':1,'href':'/docs/server/','title':"Server",'content':"Bestia Server Star Watch\nThe basic server design relies on using Akka as the framework to form a so called cluster from multiple nodes. As soon as the cluster is formed the basic Bestia entities which represents all in game elements (player, things the player can interact with, buildings, enemies etc). The entities are distributed between the cluster nodes and so are the incoming player controls for these entities. If the system needs to scale up its easily possible to just spawn more cluster nodes to distribute the load.\n https://medium.com/@takezoe/save-state-of-actor-using-akka-persistence-a9111ff2c42b http://tudorzgureanu.com/akka-persistence-testing-persistent-actors/ http://blog.kamkor.me/Akka-Cluster-Load-Balancing/\n "});index.add({'id':2,'href':'/docs/mechanics/skills/','title':"Attacks",'content':"Attacks The magic and the usage of it plays a crucial role in the Bestia universe. The users should be able to be deeply involved into magic spell creation and research.\n The words Attacks and Spells are equally used.\n The system must allow the user to describe or discover newly innovative ways to combine spells. Yet the research should be fun and entertaining. Bestias can learn attacks by two means:\n Level Up - Each Bestia has a internal list of attacks she will learn when gaining levels. Spell Discovery - The player can try to \u0026ldquo;invent/discover\u0026rdquo; new attacks which then can be tried to be learned to a Bestia. This means 16 attacks until level 70 and about 4 attacks later on.  Magic Schools All attacks are divided into the three schools of magic: Arcane, Black or White Magic. These schools might be important if certain spells are increased via a learned skill.\nArcane Magic This describes \u0026lsquo;trickster\u0026rsquo; magic. It can be illusion spells, utility spells like generating food or shelter. There might be some rare kind of damaging spells but usually they contain transmutations and other fancy spell effects.\nBlack Magic Mostly damaging spells which are meant to inflict harm. These might be damaging spells or spells which directly inflict damage or harming status of its receiver like lowering defense or status values.\nWhite Magic The Healing, Buff or protection spells. These also contain detection of spells and neutralization spells of magic. generally all kind of protection, healing or improving stati fall into the domain of white magic.\nLearning Attacks Attacks are either learned via leveling up, vie the Spell Discovery skill or via Spell Scrolls which can be traded (but are rather expensive).\nFor leveling up a Bestia a general rule of thumb is:\n A Bestia should have about 20 Attacks. 80% of the attacks should be learned from level 1 - 69. The last 20% of the attacks between level 70 - 100.  Spell Discovery Spells can be discovered by the player. If he has the skill Spell Discovery. The maximum attack learnable by the skill level is given in the table below.\n   Spell Discovery Lv. max. Attack Level Discoverable     1 10   2 20   3 30   4 40   5 50   6 60   7 70   8 80   9 90   10 100    To discover a spell an aspect is chosen like \u0026lsquo;White Magic\u0026rsquo;, \u0026lsquo;Black Magic\u0026rsquo; or \u0026lsquo;Arkane Magic\u0026rsquo;.\nTBD\nSpell Enscription If the player owns the skill Spell Enscription he can attach the spell to scrolls or even to other entities.\nAfter a spell has been materialized and bound to some kind of magic containment it can be used by the owner. Spells of a higher level are of course far harder to handle. Attaching or handling such spells could produce unwanted side effects depending on the spell (some spells might create explosions, others might teleport something away or randomly heal bystanders etc.)\nSpell Binding Most if not each entity/object in the game world have slots and triggers to which spells can be attached to. If the player has the skill Spell Binding he can discover such slots and triggers on entities as well as trying to bind spells to such entities.\nTrigger Types  Entity entering or leaving range Special Entity entering or leaving range (Name, Type etc.) Presence of Magic rising of falling Weather Conditions Time Spell Cast in Range  Detection of Magic If the user has learned Detect Magic. The detection itself is easier if the spell is more powerful. However precautions can be used to avoid the spell getting detected. If more than one spell is attached to an object the less powerful spells are harder to detect.\n"});index.add({'id':3,'href':'/docs/mechanics/resources/','title':"Resources",'content':"Resources Resources are raw materials used to sell to other players. They can be used to craft items or construct buildings. Resources can be obtained by the following means:\n Killing enemies and loot them Gathering of natural resources in the game world Using special extracting buildings or devices Recycling of existing items   The item loot from monster should be logically correct: a dead wolve would very likly not drop iron ore or golden coins.\n Dropped items in the world are semi-permanent. The player have a strong incentive to gather dropped items to participate in the market.\n Dropped items usually persist for up to 4 days (96 h real time) before they are deleted by the server.\n Mana Mana pervades the world. The concentration of mana flows is redefined in each incarnation of Bestias plays. Mana concentration is used, among other things, to determine how quickly the Bestia regenerate mana in a particular area. Mana is a two-edged-sword: As resource its quite valuable but concentrating it in a small area can lead to magic build up and lead to magic-storms or even rift events which will attract strong Bestias. In areas with high concentration magical artifacts can be built, powerful rituals can be held and mana can be \u0026ldquo;harvested\u0026rdquo; to transport it for research purposes.\nResource Types The following base types of resources exist in the game.\n   Typ Occurrence Usage     Ores, Minerals, Crystals Mountains, Sea, Caves Raffinery, Alchemy, Magic, Blacksmiths   Mana World Magical Uses   Herbs World, especially Forrests Magic Uses \u0026amp; Alchemy   Wood Forrests Material   Stone Mountains Material    List of Resources    Name Type Description     Iron Metal    Steel Metal    Silver Metal    Gold Metal    Platin Metal    Copper Metal    Mercury Metal    Blue Mana Christal Mana Used for magic artefacts   Yellow Mana Christal Mana Used for magic artefacts   Red Mana Christal Mana Used for magic artefacts   Salt Mineral    Wood Wood Standard bulding material   Stone Mountains Standard building material   Marble Mountains High quality building material   Slate Mountains Standard building material    Item Recycling For each item is a list of base resources which the item is roughly based upon (this list is also used when forging or creating the item). When an attempt to recycle the item there is a chance that the item is destroyed and the resources are lost. Some items for example\nThe base chance for item recylcing is:\n   Item Lv. Successful Recycle Probability     1 - 20 65%   21 - 60 45%   \u0026gt; 61 25%    The chance can be altered by players INT (slightly) and DEX and also by the apropriate skill:\n  \\[ P_{total} = P_{base} \u0026#43; \\frac{INT}{40} \u0026#43; \\frac{DEX}{20} \u0026#43; P_{skill}\\]  If successfull performed a recycling attempt the amount of captured resources is determined:\n   Item Lv. Base Resource Reclaim     1 - 20 80%   21 - 60 60%   \u0026gt; 61 40%    This is the base probability which is altered by the aprobiate skill as well as INT (slightly) and DEX.\n \\[ P_{total} = P_{base} \u0026#43; \\frac{INT}{40} \u0026#43; \\frac{DEX}{20} \u0026#43; P_{skill}\\]  "});index.add({'id':4,'href':'/docs/api/','title':"Api",'content':"REST API The Bestia game will get an extensive and public API to allow external developer to interface with the gameworld and create their own solutions, apps and extension. But for now we need to get the game started.\n The REST API will get fully designed and documented when the game is live.\n "});index.add({'id':5,'href':'/docs/client/','title':"Client",'content':"Bestia Client Star Watch\nThe Bestia Client is build with the Godot Open Source engine. Its job is the visualization of the game world. It synchronizes with the game server and will display entities so the player is able to interact with them.\nThe server is build similar to a Entity Component System. The client utilizes this architecture as well and make sure it can easily work with these components. It receives updates for the entities and reads the assigned components in order to display items, structures and entities.\nIt also transmits the voxel model of the world and visualizes the game map by the Godot Voxel plugin.\n "});index.add({'id':6,'href':'/docs/client/architecture/','title':"Architecture",'content':"Client Architecture Entities The Bestia server entities are synced to the client also represented there also under the name Entities. An entity is described by a set of components which is attached to it and by a certain kind of logic synched between the client and the server. Not every component is synched though. This can depend on various factors for example party membership (ConditionComponent is only synched between members of the same party), or ownership or view distance (mostly only entities in view distance are synched).\nInteraction Behavior When the player wants to interact with an entity we must provide a way to fast and easy detect the default interaction between the player and the entity. There are several problems here:\n Interaction options can vary on dynamics like equipment and need to be checked by a server side script Interactions must be saved for a group of entites so the player does not check every enemy he wants to attack There should be sensible defaults. Items should be picked by default, enemies attacked  List of Interactions  Attack1 Talk Read Use Trade Pickup Construct Gather Resources  1: Attack is always possible for entites as each entity should be attackable in the game.\nGrouping of Entities The grouping is hard to determine as the engine has no real clue which type an entity belongs to. For the player the most distinctive visual clue would be the entity model which is used for display.\nThe BehaviorService is responsible for checking the possible interactions and presenting the player the usable options, the algorithm is as follows:\n  mermaid.initialize({ flowchart: { useMaxWidth:true } });  graph TD s1[Request Interaction list from server]--s2[Is saved default interaction present?] s2-- Yes --s3[Is default interaction present in list?] s3-- Yes --s4[Did user request manual selection?] s4-- Yes --s6((Open Interaction Menu)) s4-- No --s5((Perform interaction)) s2-- No --s7[Fetch default interaction for entity] s7-- Found --s5 s7-- Not Found--s6 "});index.add({'id':7,'href':'/docs/mechanics/statusvalues/','title':"Statusvalues",'content':"Status Values Status Values are the base values from which the basics for all ingame calculations are performed. There are four main types of values: Base Values, Status Valus, Condition Values and Effort Values. The Status Based Values (SBV) play a special role.\nThe sophisticated status system describes the current state of an bestia (or simply any living entity) and does not strictly apply only to biological entities. The status system is important to calculate all battle related effects in the game.\nThe status system knows the following different attributes. These attributes are directly used to calculate the gameplay effects like battle outcomes or skill usages.\nStatus values are calculated like so:\nstr = (baseStr * 2 + ivStr + effStr / 4) * level / 100 + 5 The caluclation differs for mana and HP calculation thought:\nmaxHp = baseHp * 2 + ivHp + effHp / 4 * level / 100 + 10 + level maxMana = baseMana * 2 + ivMana + effMana / 4 * level / 100 + 10 + level * 2 Intelligence (INT)  Main influence value for magic domain related effects and power/damage of magic based attacks and skills. Increases the duration of magical effects from the player (buffs, skills, etc) Increases the total amount of available mana  Willpower (WIL)  Increases resistance against enemy spells and magic effects. Increases mana regeneration over time Increases the duration of magic effects from the player Reduces cast duration of spells Increases slightly the stamina regeneration Increases slightly the total amount of stamina Slightly increases resistance against temperature  Strength (STR)  Increases damage of physical attacks (and slightly the damage of distance attacks) Increases carry capacity Increases the maximum HP amount slightly Increases the maximum stamina amount slightly  Vitality (VIT)  Reduces the damage of physical attacks Increases the HP regeneration over time Increases the maximum amount of HP Increases the stamina regeneration Increases the maximim amount of stamina Increases resistence against temperature  Dexterity (DEX)  Increases the hitchance of physical based attacks Increases the probability of a critical hit Increases the damage of a distance attack  Agility (AGI)  Increases the attack rate Increases the walking speed Increases the dodge chance (flee rate) for physical attacks (melee and distance)  Condition Values The Condition Values resemble the current condition of a entity.\nStamina (STA)  If stamina drops to low the walkspeed of the Bestia decreases  From 30% stamina to 0% stamina the walkspeed linearly decreases by 50%.   It gives resistance against environmental factors A stamina below 10% stops the mana and HP generation A stamina below 5% leads to a slow HP drop over time  0.3% of max HP loss every tick (leads to death in about 8h real time)   Stamina can be regenerated by resting in a safe spot or by using items  HP  HP is the life energy of a Bestia or entity. If the HP reaches 0 the Bestia is killed  Mana  Mana is the energy needed to cast spells or abilities. The more mana the Bestia has the more or bigger spells she can cast  Effort Values Upon level up of a Bestia it gains Gain Points which the player is free to distribute into his Effort Values to any of the status values.\nThese values are gained upon leveling up the Bestia and can freely assigned by the player as soon as he has some points to spend. However once spend these points are fixed and can not re-distributed anymore (there might be quests or NPC which are able to reset these values in a certain amount).\nThe gain of effort values for a entity is:\neffGain = 5 + floor(reachedLevel / 2) Upon leveling up the Effort Values the player needs to invest the number of Gain Points:\neffGainNeeded = max(1, (nextEffValue / 10) Status Based Values The status based values (SBVs) are important numbers used throughout the system to determine for example the walk speed or attack speed of an entity.\nIndividual Values The individual value IVs are generated when the Bestia spawns and makes this somewhat random. Its possible to find better or worst Bestia. By breeding Bestia this IVs are subject to manipulation by the player and it is possible to make stronger Bestia in a controlled way.\nBase Values Every Bestia has Base Values upon which the status values are calculated. With setting these values some baseline for status values can be controlled from the designer. Every status has its designated base value.\nFor other non Bestia based entities like items or buildings etc. base values are usually generated via a ruleset.\nEffective Status Values The effective status values a calculated by the base values and effort values of each bestia. These values are set when the entity is instanced. For other non Bestia entities like non living objects or NPCs the status values might just get assigned by a simpler mechanism.\nUsually the equipment or buffs (status effects) will alter the status points directly or indirectly. Both alterations are called status effects and might be semi-permanent (as long as the equip is worn) or temporarily (when the buff runs out).\nThe effective status values are taken into account when game calculations are performed.\nExperience The primary way to gain experience in the game is by fighting enemy Bestias. But there is also experience for more pacifistic players to gain through the use of skills. However, in order to give players no advantage over activly fighting players, the experience gained via skill use only rises linearly (opposing to the exponential exp needed growth of a Bestia).\nKilling Enemies Skill Usage Only activly used jobs will create experience.\nDeath Penalty Players Master can not die, they are reborn with a temporary malus. Which reduces all their stats by 15% for 15 minutes.\nA killed Bestia or Master loses 1% of their current experience points. The items are automatically protected via a spell which tries to teleport the items back to a secure storage after short duration (but remember: spells can be dispelled!).\nIf the player activates the so-called Hard Mode he gets an experience bonus as well as a loot bonus of +3%. However, if he dies he looses 5% of his current experience and items are not protected by default with a spell. If once activated the Hard Mode will take one hour real time cooldown in order to get switched again.. This should prevent players from switching the mode on and off quickly after detecting a dicey situation.\nIn both cases the items suffer a durability penality.\nBestias however, can be permanently get killed, if the killing blow is particularly strong.\n"});index.add({'id':8,'href':'/docs/resources/','title':"Resources",'content':"Development Resources Here you find helpful links and general guidelines how the look and feel should be from a User Experience point of view.\nArtwork and Design The general art style will be comic like as for example World of Warcraft. This helps the game to get fast assets as its easier then archiving foto-realism and also these styles are more timeless. The assets should be in a low poly style to also ease up development and to help to get a more \u0026ldquo;timeless\u0026rdquo; look and feel.\nUI Design Currently no final UI Design was found. Feel free to contribute!\nLogos Currently no final Bestia Logo was found. Feel free to contribute!\nFonts The fonts should be cleanly readable and only two should be used, one for normal text and another one for more prominent headers:\n The main font for text is Open Sans The header font is Proza Libre  There is one Bitmap font for certain ingame usages like damage popups or small item number counts is\n  NES Cyrillic by xbost, Public Domain  Links Every game needs a good amount of artwork and assets. During development a few pages stood out where to find helpful resources, below is a list of very good and mostly free game assets sources.\n If you want to integrate new assets into Bestia it is important to chose some with an appropriate licence. Since the game itself and currently the assets are released under a free licence the artwork licence must at least allow the bundling and sharing. Creative Commons 0 or Public Domain is preferred.\n   Bitmap Fonts (most of them Public Domain). Has a nice gallery of bitmap fonts freely available.  Time Fantasy A real nice asset of compatible tilesets and sprites for RPG style games. Mostly they are free.  Game-Icons.net A lot of usable icons with a CC BY 3.0 licence.  Kenney Big chunk of assets some of them free to use.  itch.io A lot of nice game assets. Some are free, and some can be bought for a few Dollars.  "});index.add({'id':9,'href':'/docs/server/architecture/','title':"Architecture",'content':"Server Architecture Entity Component Services Entities are described by dynamically attaching components to them. ECS system have been proven as a de facto industry standard for recent game development. The components only contain the data are attached to entities which merely are an ID in the system. The so called systems act upon this data and alter the entities usually this is the case in a fixed tick amount for game logic updates.. Since the bestia system is event based and not tick based we use a little different approach. We define services which work on entities and their components. These services are triggered by Akka Actors in case a event message arrives. This architecture allows a better usage of computing resources in a clustered server environment.\nA entity factory will create a entity, save it into the memdb and also start a sharded entity into the cluster. The factory will also create and setup components which might have also active actors. If a component is created, altered or deleted these calls are intercepted via a configurable callback. Usually the component instances are cached for some amount of time to lessen the strain on the garbage collector. Upon creation of the component a message might get sent into the actorsystem to start up a component based actor which will then in turn control some execution specific operation like periodic health regeneration ticks.\nCreate Entities The first step into an usable entity are entity creators. They take alle domain data input or simple argument input and server as a helper function or a builder for usable a complete entities which are outfitted with components. They create the blueprints this is a building plan for the real entity factory for entity creation. The blueprints can either be created programmatically but they might also get statically described via JSON files which in turn then can be loaded by the software to create static entities (the created entities can of course later then be adjusted via scripts at runtime).\nBlueprint JSON Datenformat Blueprints are basically entity compositions described via JSON. Jackson is used to parse these files and feed them into a special BlueprintEntityFactory. The components are initialized with the values given in the blueprint.\nExample Dataformat { position: {x: 0, y: 0}, visible: {sprite: \u0026#39;name\u0026#39;, type: \u0026#39;type\u0026#39;}, script: {name: \u0026#39;bla\u0026#39;, type: \u0026#39;item\u0026#39;} } Entity Actor System Bestia uses a entity actor system for management and active control of its entities. Each entity is registered via an in memory actor. When entity interact they communicate via the Akka messaging system. Components are child actors of an entity actor and they can send messages to other entities or components.\nEntity Resource Cleanup The inner world representation relies on entities with associated component data. The problem is in order to manage this entities in a message based way there must be also an active actor present to receive these messages and react accordingly. This actor capsules the logic of the entity but might also have child actors if certain components require them (like for example a script callback trigger actor which will trigger script callbacks in certain intervals). If components or entities are deleted not only should the object instance be reused, these resources must also be reliably cleaned up.\nInternal Messaging Akka messages should only be send from actors to actors. This keeps the messaging system away from the service structures thus allowing a clean separation of concerns. The main entry point of message digestion is the DigestExActor. Connection and authentication Client performs Authentication → Server accepts authentication → Webserver established connection → notifies client and server → server spawns client entities and updates client. Client Connection Actors hold the connection to the client and are used as a sharded actor. Updates to this certain client are sent to the sharded actor.\nComponent Synchronization Interest Management To optimize performance clients are divided into certain areas called area of interest (AOI). Only clients having a receive enabled entity (usually bestias) inside an AOI are receiving updates of what is happening around them. These receivable entities are realized via a component attached to a entity. All such entities enable players to receive updates. The update packets are marked with a flag from which entity the observation was done. The server needs to keep track which entities are within a certain interest zone. This is done directly via the x and y coordinates of an entity.\nAs soon as a transmittable Component changes the system automatically searchs for entities which needs an updated. The updated component is then transmitted to these entities or connected players.\nClient Server Communication Datatypes All locations and entities are represented via fixed point numbers to avoid incorrectness with floating points over a bigger distance (see The perils of floating point).\nThe basic datastructures for positioning and collisions are found in net.bestia.model.geometry. Most notable the Vector3 datatype.\nIt uses long as datatypes for the coordinates and thus has a range between -9.223.372.036.854.775.808 to 9.223.372.036.854.775.807 which means if we can represent at the best a position resolution of 1mm. So our maximum world size is:\n   Size Unit     +-9.223.372.036.854.775 m   +-9.223.372.036.854 km    which is more then enough.\nBinary Protocol Bestia uses ProtoBuf descrition file in order to communicate with its connected clients. The description files can be found in the bestia-protobuf module in the main repository.\n"});index.add({'id':10,'href':'/docs/server/battle/','title':"Battle",'content':"Battle system The battle or attack is performed in various stages. Equipments or Status effects either alter the DamageVars or expose certain hooks which are called during the damage calculation. In the case of the DamageVars this object is\nThe attack itself either provides a script to completely manage the effect which takes place during cast or it provides certain callbacks for damage calculation stages which are getting called while applying the damage. The attack callbacks are:\n  onHit - Called when the enemy was hit.\n  onApplyDamage - Called when the damage is about to get applied\n  Stages of a battle The stages of a battle are visualized in the following flow diagram.\ncheck if hit is possible\n  needs los?\n is los present? no: abort attack    needs mana?\n is mana present? no: abort attack. yes: subtract mana.    Needs items/ammo?\n Is item/ammo present? no: abort attack. yes: substract item.    calculate crit hit:\n  Based on attacker and defender level and dex and direct crit modifier.\n  0.02 * (atkLv / defLv) / 3 * (atkDex / defDex) / 2 * (atkAgi / defAgi) * critMod\n  Capped: 0.01 and 0.95\n  Critical hits triple the upcoming hitrate\n  Magic attacks always hit\n  Magic attacks can not crit.\n  calculate actual hitrate\n  Based on attacker hitrate and defender flee rate.\n  Based on modifier for attacker and defender.\n  ActualHit: 0.5 * hit / flee, capped at 0.05 and 1.\n  check if the attack does land a critical hit\ncheck if the attack does land a hit depending on the hitrate.\nif the attack does miss display a MISS to the clients.\nif the attack does hit proceed with damage calculation.\ndamage calculation\ncreate damage context\ncreate damage vars\nAbhängigkeiten der DamageVars beides ist eigentlich das selbe.\n  Equipment\n  Status Effekte\n  Damage formula The damage calculation is roughly based on the system used by Ragnarök Online. In certain areas it is refined in order to better express the design philosophy of Bestia as well as be extensible. Modifier (MOD suffix) are float values representing percentage values (e.g. 0.25). Bonus mods are bigger than 1 (bonus 5% is 1.05) while reduction modifier are less than 1.\nThe damage at the end is rounded down but the damage is capped at 0. The calculation of the BASE_ATK is rather complex and is explained inside a own section. The parts written in pink are variables provided by bonuses from equips, stats, buffs etc.\nDamage = floor(BASE_ATK * ATK_MOD * HARD_DEF_MOD * CRIT_MOD - SOFT_DEF)\nBASE_ATK The base attack represents the attack strength of an entity. This attack strength is based on the status values important to perform the attack as well as the properties of the currently equipped weapon. Equipment might also alter the status values by which the base attack is indirectly influenced.\nThe base attack is capped at a minimum of 1. Default formula for physical and magical melee and magic ranged attack:\nBASE_ATK = (2 * STATUS_ATK * VAR_MOD + WEAPON_ATK * VAR_MOD_RED + SKILL_ATK + BONUS_ATK) * ELEMENT_MOD * ELEMENT_BONUS_MOD\nFor physical ranged attacks the formula is calculated as follows (ammo_atk is used):\nBASE_ATK = (2 * STATUS_ATK * VAR_MOD + WEAPON_ATK * VAR_MOD_RED + AMMO_ATK + SKILL_ATK + BONUS_ATK) * ELEMENT_MOD * ELEMENT_BONUS_MOD\nSTATUS_ATK The status attack value is determined by the capabilities of the character to attack and inflict damage. The formula is different for magic and physical based attacks.\nFor physical melee attacks:\nSTATUS_ATK = LV / 4 + STR + DEX / 5\nFor physical ranged attacks:\nSTATUS_ATK = LV/4 + DEX + STR / 5\nFor magical attacks (melee and ranged):\nSTATUS_ATK = LV/4 + INT + WILL / 5\nVAR_MOD Is a variable status modifier. The variance is reduced as the DEX value rises. It is defined as:\nVAR_MOD = 1 - (RAND(1,0) * 0.15)\nWEAPON_ATK The weapon attack value for physical attacks is given by:\nWEAPON_ATK = (BASE_ATK * QUALY_MOD + REFINE_BONUS) * SIZE_MOD * RACE_MOD * WEAPON_BONUS_MOD\nWhere as the WEAPON_ATK value for magical attacks is given by:\nWEAPON_ATK = (BASE_ATK * QUALY_MOD + REFINE_BONUS) * RACE_MOD\nQUALY_MOD The QUALY_MOD is a modification depending of the quality of the weapon. Each weapon has a quality rating which is basically not capped. But the max quali damage mod should converge to +30% at maximum.\nFrom this rating the mod damage is calculated as follow\nQUALI_MOD = QUALY / 100\nSIZE_MOD The SIZE_MOD is determined between the size of the opponent and the type of the used weapon against him. The size mod is only applied when the attack is physically based.\n  Weapon size Enemy size Modifier   Small Small 1.3   Medium Small 1   Big Small 0.75   Small Medium 1   Medium Medium 1.15   Big Medium 1   Small Big 0.70   Medium Big 1.1   Big Big 1.3   VAR_MOD_RED This is the reduced variance mod.\nVAR_MOD_RED = VAR_MOD - VAR_MOD / 2 + 1/2\nAMMO_ATK If special ammunition is used this value is used. Only ranged physical attacks can make use of ammunition.\nBONUS_AMMO This value is determined by the equipment and status effects applied to an entity.\nATK_MOD The ATK_MOD is calculated depending which type the attack was. If it was a ranged physical attack, ranged magic attack or a melee physical or a melee magic based attack. The attack mod is capped to 0.05.\nIf attack is physical melee:\nATK_MOD = bonus_physical_melee\nIf attack is physical ranged:\nATK_MOD = bonus_physical_ranged\nIf attack is magical melee:\nATK_MOD = bonus_magical_melee\nIf attack is physical melee:\nATK_MOD = bonus_physical_melee\nHARD_DEF Hard defense represents mostly the damage reduction via armor and other natural defenses. It can of course modified by scripts. The hard defense is capped between 0 and 95%. Depending of the nature of the attack (physical or magical) either the normal armor or magic armor (magic resist) is used.\nIf normal attack (ranged or melee):\nHARD_DEF = 100 - (TOTAL_ARMOR_MOD + PHYSICAL_DEF_MOD) / 100\nIf magic attack (ranged or melee):\nHARD_DEF= 100 - (TOTAL_MAGIC_RESIST_MOD + MAGIC_DEF_MOD) / 100\nSOFT_DEF Soft defense represents the natural defense of entities against damage of a specific domain. Soft def is a natural number and NO modifier. Its minimum value is capped to 0.\nIf attack is physical based (regardless if melee or ranged):\nSOFT_DEF = LV / 2 + VIT + STR / 3\nIf the attack is magic based (regardless if melee or ranged):\nSOFT_DEF= LV / 2 + VIT + WILL / 4 + INT / 5\nCRIT_MOD The base crit mod is set so 1.4 (bonus of 40% damage) if a critical hit has occurred. The chance to land a critical hit is determined before the actual damage is calculated. If no critical hit has occurred the crit mod is hardcoded set to 1. Magic based attacks can not land a critical hit (they also are hitting a target easier).\nThe crit mod is capped at 1.\nCRIT_MOD = BASE_CRIT_MOD * CRIT_DAMAGE_MOD\nDamage variables Total damage calculation modifiers which are gathered from equipment and status effects. They are re-calculated upon change of the entities properties and then stored. The variables are feed into the attack scripts so their values can be accessed and altered via scripts on a per attack basis. These values are called damage variables.\n  Variable Name Description   bonusAttackPhyscialMelee Bonus damage on physical melee attacks.   bonusAttackPhyscialRanged Bonus damage on physical ranged attacks.   bonusAttackMagicMelee Bonus damage on magical melee attacks.   bonusAttackMagicRanged Bonus damage on magical ranged attacks.   physicalDefMod Bonus or reduction on armor.   magicDefMod Bonus or reduction on magic resist.   criticalChanceMod Bonus or Reduction to critical hit chance.   criticalDamageMod Bonus or reduction in critical damage.   Kampfsystem Kampfablauf\n  Trifft eine Attacke?\n  Gibt ein ein Script für die Attacke um bestimmte Effekte, oder eine andere Berechnung auszulösen?\n Nutze das Script um den Schaden zu berechnen.    Berechne anhand aktueller Statuswerte den auftretenden Schaden und übergebe ihn an die Entität.\n  Entität prüft ob der Schaden angewendet, oder durch Equipments abgeschwächt wird.\n  Ist der Schaden dennoch aktiv wird er angewendet.\n  "});index.add({'id':11,'href':'/docs/server/quests/','title':"Quests",'content':"Quests The game will be more or less an Open World game. But the declared goal will be to try out new ways of storytelling in order to present a credible world with developing history to the players. You have to say goodbye to the idea that every game can live through every part of the story/quest. This contradicts the persistent and inner logical structure of the game world. Quests must rather result dynamically from what happens within the game world.\nHelp the Peasants! A rich harvest is imminent, but the farmer Wilhelm cannot bring in the whole harvest due to his short time before it spoils on the fields. He asks passing players if they could help him. This is rewarded with an EXP bonus, gold and if necessary an item.Defend the city! Due to high rift activity and mana flooding, many high-level Bestias make the surroundings of a large city unsafe. Players are encouraged to fight the Bestias, rise in the city\u0026rsquo;s favor, and gain access to better items, experience and gold.Help me! A NPC has gotten lost in a dangerous area and is now hiding. If a player finds the NPC he can help him to find his way back and will be rewarded with EXP and gold. Quests in Bestia are generated on via two mechanics:\n Automatic generated quests, which are spawned in cities or villages where are NPCs present Player generated quests, these challenges must be given to an NPC who will then announce these quests so other players who can pick them up, players must follow a template for the rewards.  Automatic Quest Generation Quest generation is done with Templates similar to what the terrain auto-generation system uses. Alot of logic can be built into the Scripts to \u0026lsquo;fit\u0026rsquo; locations and to vary the details of the Quest significantly. Can be made to \u0026lsquo;fit\u0026rsquo; the Player, but its better for the Player to have to figure out how to come up with the needed resources or solutions. It is based manly on the paper A prototype quest generator based on a structural analysis of quests from four MMORPGs by Ian Parberry and Jonathon Doran and also on the Grail Framework desribed in The Grail Framework: Making Stories Layable on Three Levels in CRPGS. In order to keep the quest generation close to the world in a narrative perspective consider some ideas from the paper Analysis of ReGEN as a Graph Rewriting System for Quest Generation.\nDiscovery of these quests can be done in various ways:\n Announcements by city majors Bulletin Boards NPCs in a tavern start talking to the players Classical NPC interaction  Try constantly challenge the player with various constraints imposed on quests:\n Time limits Puzzle solving mechanics Escort quests Resource or item gathering quests  The auto generation allows creating such unique (semi-unique) situational experiences when there are lots of substitutions for the multiple details that make up a quest. Progressive Quests can be built with subsequent quests opening on completion of predecessors (the usual quest trees used on most MMORPGs). Sequential Multi-Quests are easily generated: Goto X, Pickup Y, Deliver to Z -or- Patrol A then Patrol B then Patrol C .. and the locations can be shifted to \u0026lsquo;fit\u0026rsquo; the city areas (when the civilized part of city keeps expanding into the world).\nThe automatic dialog generation can use a tree like structure with templates where placeholder like items, locations and names are replaced as needed from the auto generation of quests. Sets up NPC quest-giver with a dialog tree. Many situational details can be inserted as parameters (names/locations/item types/etc) into dialog. Many quests/missions given by NPCs include directions to a specific place. The place can be changed (varied) and the terrain can actually be built/modified \u0026lsquo;on-the-fly\u0026rsquo; to match the quest, so that you don\u0026rsquo;t wind up going the same place other players have already done in the exact same mannor.\nFurther resources to read:\n  Dynamic_Quest_Plot_Generation_using Petri-Net Planning  A Quest Log is maintained so the player can look up the details of a quest even though he might been offline for a few days. This interface could very well be available on the \u0026lsquo;offline\u0026rsquo; mobile interface of Bestia, so a pre-planning can be done throughout the day. The player should be able to direct his NPC Bestias to start to prepare/move into position to be ready to start into the dangerous territory the quest might be set in). Good use for the mobile interface to handle logistics like this offline (issue orders to the players Bestia team, to \u0026lsquo;gear\u0026rsquo; up and meet me at location X).\nPlayer Quests Players can define various tasks, such as collecting resources or defeating certain enemies, or transporting certain goods as a task and offer a reward. Also the deactivation of Bestias as guardians would be a conceivable task. This reward must then be given to the appropriate NPCs, who then hold it in trust (or simply negotiate among the players).\nThe awarding of quests must be worthwhile for both parties. The player is credited with a good amount of experience both for the quest and for the successful completion of the quest by another player. He can redistribute this experience to Bestias in his possession under certain circumstances (items needed). When a quest is accepted, a contract is concluded between the player and the NPC. If all contract conditions are met, the reward will be handed out. Contracts may be limited in time and if a player fails to fullfill the contract he might need to pay a fee which is delivered to the quest giver.\nReward Calculation The player creating a quest must setup a reward. This rewards is calculated in a fixed way and depends on the available money on the current server but will also factor in the wealth of the issues. The reward can also be higher then re quested amount. 5% of the reward is issued to the NPC managing this quest contract.\nThe level range of the players suitable to do this quest must be automatically determined.\nThe fee can be payed in items or in gold, though the NPC part of the fee must be payed always in gold.\nLiterature  https://www.rockpapershotgun.com/2016/09/02/how-to-procedurally-generate-culture/ http://www.gdcvault.com/play/1024143/Procedural-Narrative http://pcg.wikidot.com/pcg-algorithm:procedural-puzzles-and-plot-generation http://ieeexplore.ieee.org/abstract/document/5740836/ https://nil.cs.uno.edu/projects/glaive/  "});index.add({'id':12,'href':'/docs/server/scripting/','title':"Scripting",'content':"Scripting Das Skript-System in Bestia wird genutzt um flexible Programmausführung für verschiedenste Zwecke zu ermöglichen. Dazu gehören vor allem die Effekte von benutzten Items, Attacken, das Verhalten von Entities zu steuern.\nAls Skriptsprache wird auf JavaScript gesetzt. Aktuell wird die Nashorn Javascript Engine von Java 8 benutzt. Sollte sich dies als Performance Engpass herausstellen so kann später mit mittlerem Aufwand auf die V8 Engine von Google umgerüstet werden. Für alle Aktoren wird nur eine Script Engine verwendet. Da Javascripts keine Mechanismen vorgesehen in einer Multithread Umgebung zu laufen, ist darauf zu achten, dass KEIN globaler State in den Scripten eingeführt und verwendet wird. Jede Ausführung muss einem zentralen Datenbestand arbeiten (z.b. Datenbank API). Zur Interaktion mit dem Bestia Server muss eine Script API vorgesehen werden, die den Scripten zusätzlich zu den von ihnen benötigten Variablen bei der Ausführung über ein Binding zur Verfügung gestellt wird.\nAllgemeine Fähigkeiten von Scripts  Scripts müssen Entities erzeugen oder zerstören können. Scripts müssen Entities in ihrerer Umgebung abrufen können. Sie müssen auf einen persistenten Datenspeicher Zugriff haben (einen globalen, einen nur für sie). Sie müssen das Aussehen von Entities verändern könne. Sie müssen Entities anpassen können (hinzufügen, entfernen von Statuseffekten)  In der folgenden Tabelle sind die Arten der Scripte aufgelistet.\n http://www.n-k.de/riding-the-nashorn/#_reading_files\n  Script Art Hooks Bindings API Funktionalität   Item onUse Account ID Benutzer Zielort (optional) Ziel (optional) Entity Spawning Inventar   Attacken  Account ID Benutzer Ziel (optional) Zielort (optional)    Entity Script onTouch Berührende Entity Interagierende Entity Entity Spawning Inventar Attacken und Schaden   Equipment \u0026 Statuseffekte onTakeDamage onAttack onTick onEquip onUnequip onStatusRequest  Tick API   Scripts bestehen aus Funktionen die in Javascript implementiert werden. Die Funktionsnamen haben dabei den gleichen Namen wie in diesem Dokument beschrieben und werden bei Bedarf aufgerufen.\nDie Scripte sollten keinen inneren Zustand besitzen. Sie werden daher auch nicht serialisiert sondern nur eine Referenz ID/Namen. Durch diesen wird das entsprechend kompilierte Script Objekt abgerufen und bei Bedarf ausgeführt. Zustandsdaten müssen dann im Script über entsprechende APIs abgerufen werden.\nScript Kontext Stellt Zugriff auf die allgemeine API bereit.\ncreateEntity()\ngetEntities(Rect rect)\ngetEntity(Long id)\n// Set und Get vars müssen transaktionssicher sein.\ngetVar(Long id)\nsetVar(Long id, String data)\n// Set und Get vars müssen transaktionssicher sein.\ngetGlobVar(Long id)\nsetGlobVar(Long id, String data)\nScript Callbacks EntityScript\n Locatable  Sie befinden sich in der Welt.\n onEnter(Locatable e) onLeave(Locatable e) onTick(Locatable e)  registerTick(1000, function(){});\n onMoveInside(Locatable e, Path p) onCreate() onDestroy()  StatusScripts / EquipScripts\nEs muss eine Reihe von standard Status und Equip Scripts geben die simple Änderungen der Werte erlauben. Es sind Additionen und Multiplikationen erlaubt.\nBesonderheiten\n  StatusModifier verändern die Statuswerte durch Addition und Multiplikation oder durch setzen eines festen Wertes. Dabei kann eine Priorität angegeben werden.\n  onApply\n  onRemove\n  onStatus(StatusModifier mods)\n  Modifiziert den Status\n onTick() onTakeDamage(Damage dmg, Attackable self, Attackable enemy) onAttack(Attack atk, Attackable self, Attackable enemy)  There are two different kind of scripts in the bestia system: one which are called directly and one which consists of specific function which are targeted as callback if a specific event occurs. Usually the scripts get a exposed API which allows them to interact with the bestia system, alter or create new entities. Scripts are very powerful their code is called via entry point functions to perform specific tasks during runtime. Like for example trigger code execution if an item is equipped or an entity collides with a script collider. Yet these calls are for a direct interaction only. If scripts want to get notified for example when a certain event occurs we have to use the script callback event system. Other scripts can also emit certain events. Imagine we want to get notified for a weather event. We would do:\nBAPI.event.subscribe(‘weather.rain’, ‘global/script.js:onRain’);\nIn the rain script we would do a:\nBAPI.entity.find(rect(10, 10, 20, 20)).forEach(eid =\u0026gt; { var intensity = 0.6; BAPI.event.emit(‘weather.rain’, ‘start’, intensity); });\nIn order to set callbacks directly into functions one can use the setCallback API call with key: func:myFunc. This will invoke the function myFunc in the same script as it was called. With the key script:hello the top level of the script /script/hello.js will be called. And finally both keys can be combined: script:hello:func:test will invoke the function test inside the script /script/hello.js.\nSome special variable are always set for scripts. These variables vary from script to script type and are listed below. Global Variables SUID (string): Unique ID of the Script. Each script attached to an entity has its own unique id. The same script file attached to multiple entities has different UIDs. This id can be used to retrieve variables from the global storage. The UID is retained between successive calls from callbacks/timeouts for example. The script UID is currently only set if there is a permanent instance of a script. BAPI (Bestia API): API entry point which allows scripts to interact with the system. Script Entry Callbacks onCollision\nEquipment Scripts These are attached to equipments and are somehow similar to status effect scripts yet they share callbacks from items since equipments can lay down on the ground and there is a chance they get attacked.\nCallbacks  onAttach onDetach onDrop onPickup onTakeDamage  Item Scripts Item scripts are called if an item associated with the script is used. This is one of the most simple form of scripts.\nSpecial variables source (long, entity id): The owner who triggered the script target (long, entity id): Might be null. Is set if the item was intended to be used on a certain entity. targetPosition (Point): Might be null. Is set if the item was intended to be used on a certain place.\nAttack Scripts The attack scripts are a bit more complex. They are also simply called upon usage of an attack. Depending on the definition of the attack this might be the only place to perform certain damage calculation for example.\nInteract Scripts This scripts are called when interaction between an entity and a script takes place. The trigger can vary.\n"});index.add({'id':13,'href':'/docs/server/world-generation/','title':"World Generation",'content':"World Generation Bestia integrates a specialized library called WorldGen for world creation. It is a clusterable generator which is cabable of dividing the world creation workload onto multiple, different machines. With this framework it should be possible to create million of square kilometers without hitting any memory limit on the servers during the creation process.\nIn general it works by creating piplines which are then used to create and transform noise maps. After the noise was modified and generated the map data is created and saved to the Bestia database in chunks via the Voxel module.\nWorld Generation Algorithm There is basically a pipeline in order to generate the Bestia map, these steps are listed here and described below:\n Setup of Base Parameters Creating of noise maps based on base parameters  Height Map Humidity Map Temperature Map Mana Map Population Map   Sealevel Erosion Simulation Creating Rivers and Lakes Biome Setup Terrain Features Settlement Creation Resource Distribution Navigation Map Creation  Base Parameter The following base parameters are used to generate the map:\n Total Population   \\(P\\)   World Size  \\(W\\)  (Depends on expected player count) Count of Settlements  \\(C\\)   Seed Value  \\(S\\)   Maximum Terrain Height  \\(h\\)   Seelevel (Normalnull)  \\(N\\)    The base parameter are generated randomly based on the expected active player count. They are persisted in the database together with some additional map parameters like creation date or name of the world (to keep some kind of history record).\nNoise Maps The following noise maps are created by the help of OpenSimplexNoise and saved in a shared data storage temporarly until world map generation is finished. In order to save memory its advisable to delete this maps as soon as possible.\nDepending on the case the resolution of the heightmaps might be differnt in order to be as memory efficient as possible.\nHeight Map The heightmap  \\(M_h\\)  consists of multiple high and low resolution maps which are added and then normalized to a value between 0-1. The lower resolution should have a frequency of about 2-5m. The highest resolution should have a frequency of roughly 4-5km, to give a sense of a \u0026ldquo;big\u0026rdquo; world. Consider maybe 2-3 resolutions in between which a decrease in amplitude.\nAfter the heightmap is created we redistribute the noise values by:\n \\[height_1 = M_{h}^{2.1}\\]  This will push valleys further down and increase the hill heights. After this we will renormalize the values again between 0-1.\nTo calculate the final hight multiply this hight with the maximum map height.\n \\[height = norm(height) \\cdot h\\]   Heightmap resolution is 1m.\n In general the map should make the illusion to \u0026ldquo;wrap\u0026rdquo; arround, this can possibly archived by pushing everything on the sides under water, or to use a coordinate transform so the the map is actually wrapping around the borders. Which possibility is used for Bestia is not yet decided. As a hint, good shaping function can be done by:\ne = lower(d) + e * (upper(d) - lower(d)) Where d is the distance to the center of the map.\nRidged Noise For better initial mountains a special function can be sued which is described as:\nfunction ridgenoise(nx, ny) { return 2 * (0.5 - abs(0.5 - noise(nx, ny))); } We can vary the amplitudes of the higher frequencies so that only the mountains get the added noise:\ne0 = 1 * ridgenoise(1 * nx, 1 * ny); e1 = 0.5 * ridgenoise(2 * nx, 2 * ny) * e0; e2 = 0.25 * ridgenoise(4 * nx, 4 * ny) * (e0+e1); e = e0 + e1 + e2; elevation[y][x] = Math.pow(e, exponent); Humidity Map The humidity map  \\(M_{hum}\\)  represents the total annual rainfall between 0-1. The more the humidity is the more snow or rain fall is to be expected (depending on the temperature).\nThe humidity map is saved in a reduced resolution for later reference for the dynamic environment simulation.\nIt slightly reduces the humidity based on the height of the terrain like so:\n \\[hum = M_{hum} - 0.4 \\cdot M_h\\]   Humidity resolution 100m.\n Temperature Map The temperature map  \\(M_t\\)  represents the annual average temperature between 0-1. We assume a desired temperature range of -40 to 40 degree. This is shifted of about +/- 10 degrees randomly upon world creation.\nAs our temperature map initially holds values between 0-1 the conversion is done like:\n \\[t = M_t \\cdot 80 - 40\\]  The temperature is just created as the other maps but then a gradient is added which will increase the temperature towards the middle (equator) of the map by 130% and drop down to top and bottom to 30% of the original value. An example gradient is shown below:\n It reduces the temperature the higher the hightmap value is down to a value of 10% by the formula:\n \\[t = M_t - 0.9 \\cdot M_h\\]   Temperature resolution 100m.\n Mana Map The mana distribution  \\(M_m\\)  is a normal noise map without any changes. Its done in two passes, a high frequency and also a low frequency pass. This allows us a rapid alteration in a smaller area while we still have big areas with just a higher mana concentration then others.\n Mana resolution 10m.\n Population Map The population distribution  \\(M_p\\)  is a normal noise map without any changes. But is later heavily modified by influence maps.\n Population resolution 100m.\n Sealevel The sealevel should chosen that oceans vs landmass ratio is about 20:80. This could be calculated but for now we just assume a fixed height value. Every terrain below is covered by water, the rest is landmass.\nErosion Simulation Its loosly based on the SIGGRAPH 2017 talk. In short random events a placed on the map like a water droplet. This droplet follows the slope downwards a hill and is able to pickup material. If it has reached its maximum carry capacity it starts to deposit a certain material amount again. A good explanation is found in Coding Adventures: Hydraulic Erosion.\nCreating Rivers and Lakes Water always flows downhill. In order to simulate the water flow random sources of water are placed at elevated points in the map and then the water flow is simulated down the slope of the terrain.\nThe creation algorithm works as follows:\n Decide if a chunk has a spring Detect the spring source  The base probability if a chunk has a spring is given by:\n   Avg. Height [m] P     h \u0026lt; 100 impossible   100 \u0026lt; h \u0026lt; 1000 0.2   1000 \u0026lt; h \u0026lt; 1500 0.3   1500 \u0026lt; h \u0026lt; 2000 0.1   2000 \u0026lt; h impossible    The average humidity on the map influences the probability P like:\n \\[P_{total} = (0.6 * hum_{avg} - 0.3) \u0026#43; P_{base}\\]  In order to find the coordiante of a water sources on a map and their probability distribution, the map is sampled at a resolution of 10m and theprobability P of a coordiante is given by:\n P increases at heights above NN max is 0.6 and then decreases above P increases with humidity above 0.5 - 1.0 from 1.0 to 3.0   \\[\\begin{aligned} P_h \u0026amp;= height(x, y) / 0.6\\\\ P_{droplet} \u0026amp;= M_t - 0.9 \\cdot M_h \\end{aligned}\\]  After these are placed a water stream is simulated flowing from the source down the slopes. In this is an iterative process. The source will spill out a certain amount of water to the tile. In every step a bit water evaporates depending on the surrounding temperature. The simulation is repeated until there is no significant change in waterlevel and it reaches an equilibrium. If the water floats out at the border it is buffered and in a next run it is exchanged with the border tiles. This is again done until there is no significant change anymore and equilibriunm reached.\nBiome Setup  Note: For the biome calculation you need to calculate the ranges from the given absolute value in the noise map space.\n    Biome Height [m] Temp. [°C] Hum. Special     ICE_DESERT 0 - ∞ -∞ - 0 0 - ∞    DESERT 0 - ∞ 30 - ∞ 0 - 0.1    DRY_FOREST 50 - 1200 10 - 30 0.3 - 0.5    MOIST_FOREST 50 - 1200 10 - 30 0.5 - 0.8    RAIN_FOREST 50 - 1200 20 - 40 0.8 - 1.0    MOUNTAIN 1500 - ∞ - -     Terrain Features After the Biomes are placed and the heightmap is finalized by erosion simulation there are predefined features placed on the maps. This can be old temples, caves or other quest relevant artifacts for player interaction.\nUsually these kind of features are depending on the kind of biome. For example a forrest biome would then run through the tree entity creation. This entities are stored in a database right when they are created via a entity blueprint.\n   Biome Possible Features Influence     ICE_DESERT Caverns, Ruins +40% mineral resources   MOUNTAIN Caverns, Artefacts +100% mineral resources   DRY_FORREST Caverns, Ruins, Artefacts, Deserted Settlements    MOIST_FOREST Caverns, Ruins, Artefacts, Deserted Settlements    RAIN_FOREST Caverns, Ruins, Artefacts, Deserted Settlements     Settlement Creation Cities usually form around natural resources like shores, rivers or rich farmland. The algorithm as described below will find suitable city position candidates and then distribute the cities in clusters around the world map. This clustering will make sure there is enough unexplored land for the players left to explore (and to create own settlements). It should also help with the idea of different civilization which could lead to ingame player conflicts.\nThe algorithm searches the world map and creates matrix with a mesh length of 1km.\n Rohstoffvorkommen (Farmland, Minerals, Fishing Grounds) Nähe zu einem Gewässer (Fluss oder Meer)  Folgende Voraussetzungen müssen gegeben sein:\n Karte mit Biom-Zuordnung muss generiert worden sein.  Aufbauen auf der Weltkarte wird eine Influence Map erstellt. Wasserwege geben einen abfallenden Wert vor. Die Auflösung der Influence Map kann geringer sein als die eigentliche Karte. Auflösungen zwischen 100m und 1km erscheinen praktikabel. Folgende Punkte werden auf der Influence Map vergeben und summiert:\n Ist das Biom praktisch um Lebensmittel anzubauen? Sind natürliche Ressourcen in diesem Biom vorhanden? Wasser Biom in der Nähe gibt Punkte.  Von der Influence Map müssen nun die Punkte entfernt werden die eindeutig keine Besiedlung ermöglichen. Folgende Punkte müssen auf 0 reduziert werden:\n Liegen im Wasser/Lava Liegen auf Gebirge Liegen im Wald Liegen in Gebieten mit sehr hoher Magie  Bei allen verbleibenden Punkten muss überprüft werden ob es sich um ein lokales Maximum handelt. Diese Punkte werden zusammen mit ihrer Gewichtung in eine sortierte Liste aufgenommen. Dabei kann ein wandernder Durchschnitt berechnet werden und Werte unterhalb eines gewissen Schwellwertes verworfen werden.\nKoordinaten die dann zu nahe beieinander liegen (\u0026lt; 3-6km) werden aus der Liste entfernt.\nAnhand der Punkte auf der Liste werden die Siedlungen berechnet. Zu 70% wird eine Stadt aus der oberen Hälfte der Liste der Reihe nach entnommen. Zu 30% wird eine Siedlung zufällig aus einem Kandidaten der unteren Listenhälfte entnommen bis die Anzahl der gewünschten Siedlungen erreicht ist oder die Liste erschöpft ist. Sollte ein Listenteil erschöpft sein, so wird jeweils vom anderen Listenteil mit dem gleichen Muster vorgegangen.\nErzeugung von Städten\n Bestimmung der Anzahl der Gebäude anhand der Populationsmenge. Verteilen der Gebäude um den Stadtkern nach einer Gaußkurvenverteilung. Erzeugung der Gebäude-Innenräume nach: https://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method  Road Creation After the settlements are created, depending on their population size and an estimated travel distance roads are procedurally generated. We loosly follow the approach presented in the Paper Procedural Generation of Roads.\nTBD.\nResource Distribution TBD.\nNavigation Map Creation The navigation map is created for NPC to fast calculate travel paths other long distances. It creates a connected graph network and the output is put into a Neo4J database.\n Add nodes for each city, artefact and places of interest (POI\u0026rsquo;s) Add a grid of 10 * 10 points and connect them to every next neighbour node (diagonal connections are allowed) Weights of these connections is calculated  The guidline for weight is 1 for a normal, easy to walk road. It gets higher for e.g. steeper terrain and if there is a slope between the points is more then its marked as climable.\nIn order to detect climable terrain we follow the connection between the nodes and if the slope over a distance of 5m is higher than 45° it is marked as \u0026lsquo;climb\u0026rsquo;. The weight for sloped terrain is:\n \\[weight_{total} = weight_{base} \\cdot min(1.0, (slope - 15) \\cdot \\frac{4}{30})\\]  For waterways the weight 1 for a calm and normal flowing river and increased based an water speed or obstructions.\nExample weights:\n Normal road: 1 Grassland: 1.5 Rough Terrain: 2 Terrain with lots bushes/thorns: 4 Swamps: 8  Additional data labels for the connections, to later help filter them for different use cases:\n Walk: Connection can be traveled by food Drive: Weagons can drive on this connection (e.g. roads) Swim: Waterways connections are marked like this Climb: Conneections with slopes higher then 45 degrees are marked like this   Its possible that downscaled graphs with pre-calculated connections must be made in order to speed up NPC navigation later on.\n World Data Cleanup Before a new world is created the old world data is deleted. The following procedure is made after all player entities are persisted and active entity simulation has stopped:\n Delete all voxel data Delete all navigation waypoint data Delete all non-player entity data  Literatur   www.redblobgames.com - Making maps with noise functions - Very detailed overview of heightmap generation techniques with sample code  Generating terrain in Cuberite - Ideas on how to create biomes in an alternate way, also nice overview of noise functions  Procedural Generation Resources - A nice collection of links regarding procedural generation for games  Dwarf Fortress - In general a good inspiration on how the Bestia world generation quality should be  Spherical Projections (Stereographic and Cylindrical) - Background infos on spherical and zylindrical projections, useful for coordiante transformations  Algorithms for Procedural Content Generation - Another very good and big resource for PCG algorithms  "});index.add({'id':14,'href':'/docs/server/ai/','title':"Artificial Intelligence",'content':"Artificial Intelligence The AI system in Bestia will set new standards. Bestias and NPCs alike should be able to create long-term plans, so-called game plans or GPs for short. They then follow this strategy until observations or influences from the game world force them to abandon this plan or the plan is fulfilled.\nBestias look for ways to get the highest possible inner happiness. They must sleep, eat and feel attracted to mana currents. Of course they try to avoid threats and protect their health. Here some subtypes differ from each other. Some tend to be aggressive and actively attack players and other Bestias, while others are shy and flee quickly. But there can also be representatives who are, as you would say, \u0026ldquo;stupid\u0026rdquo; and will attack players to death as soon as they come into sight.\nDecisions should be made on the basis of knowledge. A sensory simulation should be used to understand the world and make decisions based on it.\nThe basic AI forms should be assignable via shortcut in the Mob table (and for NPCs in the Map Editor). For bosses or special bestias, however, scripts should be able to be stored to enable target-oriented behavior.\nFinden einer KI Strategie\n  NPC\n Arbeiten  Holzhacken Fischen Feldarbeit Haus bauen Bibliothek   Schlafen Essen Ausruhen Reisen    Mob\n Schlafen Junge aufziehen Nest bauen Nahrungssuche    Entity\n  Kann Schaden erleiden.\n  Besitzt eine Ausrichtung\n  Kann am KI Eventsystem teilhaben\n  Besitzt eine Position.\n  Besitzt eine visuelle Repräsentation (Sprite)\n  Kann eine KI Strategie erzeugen, basierend auf einem Script/Behaviour Tree\n  Sinneswahrnehmung Es müssen sensorische Daten über die Umwelt an das KI System einer Bestia geleitet werden. Folgende externe Sinne werden simuliert:\n  Sicht\n  Gehör\n  Gefühl: (Hitzeempfinden/Feuchtigkeit)\n  Mana (Wahrnehmen von Mana)\n  Die Engine muss diese Sinnessimulationen generieren und Entitäten die sich für diese registriert haben über Veränderungen hinweisen, was den Entitäten wiederum ermöglicht eine Neubewertung ihrer KI Strategie vornehmen zu können. Dazu kommt ein umfassendes Set an internen Informationen wie Gesundheitszustand, Manavorrat, mögliche Attacken, Wissen über Geländebesonderheiten.\nDa die Bewertung der KI Strategie von der Entity selbst vorgenommen wird, sollen die Regeln zur evaluation der Strategie dynamisch zur Laufzeit anpassbar sein. Lernende Agenten wären die folge. Die Entity benötigt nicht nur Schnittstellen zum Empfangen von KI Relevanten Events. Nachdem eine KI Strategie gefunden wurde, muss diese Strategie auch umgesetzt werden.\nIm folgenden werden die Sinneswahrnehmungen der Entities im einzelnen beschrieben und möglichkeiten dargelegt diese effizient zu simulieren. Nicht alle Wahrnehmungen lassen sich ausreichend schnell physikalisch ausreichend gut simulieren.\nSicht Sicht erfolgt durch die Wahrnehmung von Licht. Es breitet sich ausreichend schnell aus, dass keine zeitliche Verzögerung betrachtet werden muss. Entities besitzen einen Blickwinkel von 60 Grad. Das Blickfeld kann aber durch Entitäten welche die Sicht blockieren oder einfachen Hindernissen versperrt sein. Lichtverhältnisse können die Wahrnehmung beeinflussen. So ist Nachts mit einer geringen Sichtweite zu rechnen. Die optimale Sichtweite sollte in etwa der Sichtbereich eines normalen Spielers betragen (das bedeutet (1950 px / 32 px) / 2 Tiles = 30 Tiles).\nVerhalten von NPC\n  Nachtaktiv (Lichtscheu)\n  Agressiv - Suchen aktiv Spieler und greifen diese an.\n  Passiv - Ignorieren Spieler soweit diese sie ebenfalls ignorieren. Scheu - Versuchen aktiv Begegnungen mit anderen Bestias oder Spielern aus dem Weg zu gehen.\n  Ein angreifender Spieler oder Umweltbedingungen können das Verhalten ändern. Folgendes Verhalten soll für ein KI gesteuerten NPC möglich sein. Das komplexeste Verhalten kommt hier den NPCS zu. Mobs verhalten sich in der Regelprimitiver dennoch soll auch ihre Langzeitplanung und Verhalten neue Maßstäbe setzen. Die Zustände können durch das erreichen von Zielen aufgelöst werden. Um Zeit zu sparen soll gerade die Berechnung der Zielerfüllung ggf. Extern zumindest aber in mehreren Schritten erfolgen.\nVerhaltensmuster der Mobs und NPCs\n Planen von Routen über mehrere Maps hinweg. Festlegen von inneren Zielen Wahrnehmung des Manaflusses  Präsentation Dieser Abschnitt enthält Themenpunkte welche die konkrete visuelle Umsetzung und Präsentation des Spiels gegenüber einem Spieler umfassen. Dies können sowohl Style Richtlinien sein, als auch spiel mechanische Elemente um die Story zu transportieren.\nKünstliche Intelligenz Grundlegende Techniken   Wissendatenbank für die NPC über eine selbstoptimierende Ontologie (Semantische Wissensdatenbank).\n  Entscheidungsbaum\n  Auflösen von Informationen\n  Entitätsbasierte Wissensdatenbank (Erinnerung, Abfrage und Löschen der Informationen nach gewisser Zeit).\n  Interaktion mit Gegenständen Um ein glaubhaftes Szenario der Welt zu zeichnen, müssen Entities in der Lage sein miteinander zu interagieren. Entities sind hier alle im Spiel befindlichen Gebäude, Gegenstände oder NPCs. Auch die KI muss in der Lage sein den Nutzen von Gegenständen zu begreifen und diese zu verwenden (Inventar von Entities muss vorhanden sein).\n  KI Buch\n  SIMs KI\n  Gegenstände bieten Fähigkeiten an die man verwenden kann\n  Interaktion: Gegenstände bieten ein Signal Slot Verhältnis das man miteinander verknüpfen kann. Über diese Verknüpfung wird sichergestellt, dass auch räumlich voneinander getrennte Items miteinander interagieren können. (z.B. magische Artefakte die durch eine große, räumliche Distanz voneinander getrennt sind, oder Alarmanlagen in benachbarten Räumen).\n  Gegenstands Verknüpfungen\nAllen Gegenstand Entitäten (und somit eigentlich allen Entities) müssen in der Lage sein andere Gegenstände aufnehmen zu können. So lassen sich zum Beispiel Truhen, Frachtladungen etc. realisieren. Ob ein Gegenstand erfolgreich aufgenommen werden kann oder nicht muss dynamisch durch ein Script der aufnehmenden Entität entschieden werden. Hier kann ermittelt werden ob Voraussetzungen wie ausreichende Ladekapazität erfüllt sind.\nInteraktion mit einem Gegenstand muss einen Fehlerstatus liefern ob die Interaktion erfolgte, oder ein Abbruch stattfindet (eine Interaktion nicht möglich war). Der Grund für diesen Abbruch muss angegeben werden können, damit dies für den Benutzer ersichtlich ist.\nThe artificial intelligence module should be implemented as generic library so it can be used by various kinds of games. The framework must interact with the game engine in certain ways. It must have some notion of locality. The engine must be queried about environmental factors and the AI framework must be provided with a point object which it is able to save. Depending on this locations the game framework must be able to move agents to this points. Also the path planning and avoidance is highly dependent of the game and can not be part of the AI framework itself but must be provided by the game engine. It is very likely that there are different kind of AIs needed for one single game. There are low intelligence agents like small (or dumb) enemies and very intelligent agents like NPCs or bosses. Agents are described by an inner state which describes its next actions. The inner state might not always be a single, simple state (like a state machine) but can also inhibit a fuzzy behaviour. The inner state should be savable. The state transition should occur depending on the used state machine. Either there could be decision trees, variable controlled (fuzzy states) and many more. Either way there are transition function in place which take inputs from the environment and change directly the state or indirectly attributes which are used to ultimately calculate the current internal state. The AI transition function must have a way to actively query into the world state of the engine to gather informations. This could be sounds, smell or visual information of their environment and so on. This information is used to either directly change its internal state via its transition functions or this information is filtered and saved into the agent\u0026rsquo;s memory if a memory storage is provided. Environment information might also get delivered via events to the agent. Such information is usually not actively searched for. But a sudden explosion sound or enemy visual could lead to a change in behaviour and thus internal state. The agent must be able to re-evaluate its state upon the arrival of such events. Smart management and storage of environment information is also a complete new innovation: the introduction of memory supported AI. This could mean a AI is capable of remembering the positions of players habitats, hunting grounds etc.. Depending upon the AI the entity should be able to communicate this information to other entities (if it is capable of communicating). Since we won\u0026rsquo;t be able to correctly simulate the transfer of information via a language (might be the case for a later implementation) what we need is a way to configure the process of information exchange with other agents. It must be configurable which type of agents are able to exchange information, how close they must be to each other, do they need a special internal state until information is transferred and if the transfer starts how many information is shared how fast? Agents should decide for themselves (usually depending on the internal state how often they want to reevaluate the world around them since this is a costly operation). They can send a suggestion to the outermost control system how often they want to tick (a sleeping agent usually needs less processing than a fighting entity). However the external system has to decide how many spare resources it has and if necessary give the AI less ticks then they might suggest). Since the Bestia system is event based and not ticked based in order to avoid unnecessary evaluations we might need a filter which will ignore certain incoming events to avoid costly operations. Inner states might lead to desires. There must be a function for certain group of entities which maps the internal state to a current, certain goal. The strongest goal determines which actions are currently performed. The mapping of this Goal(State) function is highly agent and game dependent and thus must be provided by the user of the framework. There might be some default desires like eating, sleeping, idle etc.. Long term goal and behaviour planning If the internal states suggest the agent is hungry which leads to a desire to eat we must have a way to plan how this desire can be fulfilled in a changing and complex external world. Therefore we need a mapping of goals to a list of actions. A action is a small subunit and should be able to be directly performed by the entity inside the game world. In order to perform correct goal into action mappings the agent needs some additional informations about actions like for example the estimated execution time or other cost factors so a cheapest path can be found of the current state to the goal. The actions are then saved into a queue and performed one after another by asking the game engine to perform this action in behalf of the agent. The agent must be able to ask the game if the action has been performed or if it\u0026rsquo;s maybe unable to execute the action at all. If this is the case a revaluation of the goal to action list must be performed. Some actions might be available all the time (drop an item) but some actions might only be possible in certain circumstances (mana is not empty, a certain tool lies on the ground). It is the job of the goal solver to assess all possible actions for a certain agent until the search for the best action solution towards the goal can be found. Architecture Agents Agents contain a “Memory”. Inside this memory certain events are recorded and the agent can access this information for evaluation the next actions. The memory\u0026rsquo;s size must be adjustable to limit memory consumption. Depending on the memory and the agent the memory is eventually dropped from the internal state or its weight reduces in decision making (a seen item might drop in relevance over time). Agents act to fulfill “Desires” Agents perform actions in order to fulfill the current active desire. Agents can form groups and exchange “memory”. Agents contain a state which describes internal “values” like e.g. hunger, thirst, health etc. based on this internal state and external circumstances desires are planned. Receive environmental events like sound, smell or vision. Each change of world state (e.g. received event) can lead to a reevaluation of its internal state/goals/desires.\nAgentState Attributes can be added by the user. Some state values are getting “better” the higher they are, some should be lowered. (e.g. hunger is bad if its value is high. But sleepiness is good when it goes low). Some/all values have a decay function. Their values change over time. Desires Are fulfilled by a planned list of actions. Desire have a priority. The desire to stay alive might be higher than to move from a to b. Some desires are permanent some are temporary. The possible actions are layed out to optimize against a agent dependent weight function. Some actors maybe want to save money, some might save time etc.\nQuestions How are desires evaluated as “fullfilled”?\nExternal System Calls AI manager in more or less regular intervals to evaluate state changes. External system provides interface for environmental access. Perform Actions Query informations about the state of certain actions Estimate the cost of an action\nAIGoalSolver AIs must be able to solve complex operations in order to fulfill a desire. Example: Desire: Sleep Goal for animal: Find sleeping place → sleep Sleep Goal for human: Go home → go to bed → sleep\nDesire evaluation For example the most important desire for most agents would be to stay alive. In order to do so they have a high importance to maximize the internal health state. The goal evaluator will pick one out of all possible actions, the action will alter the state and then the improvement will be evaluated. For example:\nAgent It has in its internal memory two locations A and B of possible food saved. Near location A is also saved that there is an enemy 1 hour ago. B is further away.\nThe agent gets very hungry and the desire to reduce the hunger is picked and placed as the current and thus most important one. The goal solver now tries to solve this desire. The solver looks in all possible actions for the entity: Pick up food (there is no food around, thus this action is not legal) Move (has a bit of a cost associated) The solver picks move because the memory says there are two places with food. CONSIDER THE ENEMY The solver calculates how long it would take to perform the move action (time will increase our hunger) and pick the shortest way. The main factors to drive AI decisions How long does an action take to perform? How much impact has the action? (measured by how much our internal state changes to the better or to the worst). AI evolution The most complex feature should be AI evolution. The AI should be able to evaluate its actions against a fitness function in order to start alternating or changing the transition functions. This could be either changing the whole decision tree or only changing some parameters in order to optimize behaviour. This evolution should be configurable. Some AI behaviour should simply not be able to change. Maybe some sort of evolutionary algorithm could be used to evaluate the AI actions. This would need two components: a fitness function evaluating the performance of the AI for certain criterions and a encoding scheme to encode the transition functions into a genetic code used for mutating after applying pressure.\nAIPoint is used as notion of locality in the world. Points must be serializable so they can be saved with various locations. Path planning and waypoint generation There is a global waypoint and path network Long term planning only available for agents which have learned about the way Learning happens by: reading, questing, exploring the way of its own, drawing maps\nLiterature   A Better Monster AI - Joseph Swing  "});index.add({'id':15,'href':'/docs/mechanics/master/','title':"Bestia Master",'content':"Bestia Master The intro game tells players how to become a Bestia Master. They came into direct contact with an ephemeral mana crystal that changed their nature through magic and connected them to the mana flows. They are therefore receptive to the influence of mana and are able to communicate with the beings that emerge from this mythical energy: the Bestias.\nThe attachment to mana also explains why Bestia masters were able to survive the destruction of their world relatively unscathed and to pass on to the next world.\nSkill Mastery The bestia master of a player can learn a set of skills. Since these skills are bound to the account they are called account skills or just skills. These skills are freely chosen by the player and determine the job or profession of the master.\nSome of this account skills can be used by every Bestia in posession others only by the master itself.\n Don\u0026rsquo;t confuse this skills with the regular attacks a Bestia is learning by item usage or level up. These are simply called attacks.\n Guidlines  The number of total skil ranks inside a tree should be between 70-80 The possible rank counts of a skill should be: 1, 3, 5 and 10 There should be some meaningful dependency of the skills forming a tree In each profession tree there should form 2-3 sub-trees which create a meaningful hierarchy There should be some kind of three tiers inside a tree to lead from low and basic skill to the much powerfull skills   Most Important: No hardcoded skill effects!\n Skills should be used when possible require some interaction with the player whose success depends on the effect of the skill. An example would be the teleport ability: after selecting the players (which can be flexible by the number) and the magic interference at the destination, the player must win a small mini-game in the client which can be a skill game. Depending on how successful this was, the player will be more precisely transported to the destination.\nUltimately, it remains important to leave the outcome of skills open in some way. However, the result should remain understandable and influenceable by the player.\nSkill Progression Starting from level 10, on each level up the master gains 1 skillpoint to put into the skills rank. This is permanent and means a player can spend about 100 points for improving the ranks of his skills.\n Since max level is not capped actually he might be able to spend more points but a progressions gets continously harder it is safe to assume every player has about 100 points.\n The skilltrees are designed as such that to reach the highest professions in a tree the player needs to spend 70 points.\nThe player can decide to have mediocre profession in each tree or to max out one and have maybe half of the meaningful professions of another tree. The skilltree is a hierarchical dependency of skills.\nCommon Tree In this tree, simple, common mundane tasks are placed.\nFirst Aid (1)\nPlayer can apply bandages to Bestia and channel a healing effect of ob to 30% of their total health. The channel time is 15 seconds and the cooldown is 5 minutes. A Bestia can only receive a First Aid every 30 secs.\n  +3% damage/level\n   Cooking (5)\nThe user can start to cook meals on fire places. This meals apply certain buff effects when they are eaten.\n  Level increas makes it easier to cook higher level food.\n   Fishing (5)\nWith this skill you are able to start fishing.\n  Level increas makes it easier to catch higher level fish.\n   Battle Tree The battle tree contains skills which are primarly useful for fighting, battle and maybe to some extend improve survival in the wild.\n  mermaid.initialize({ flowchart: { useMaxWidth:true } });  graph TD SPRITIUAL_MASTERY(\"Spritual Mastery [5]\") ELEMENTAL_MASTERY(\"Elemental Mastery [5]\")--|min. 3|MASTER_OF_FIRE(\"Master of Fire [10]\") ELEMENTAL_MASTERY--|min. 3|MASTER_OF_WATER(\"Master of Water [10]\") ELEMENTAL_MASTERY--|min. 3|MASTER_OF_WIND(\"Master of Wind [10]\") ELEMENTAL_MASTERY--|min. 3|MASTER_OF_EARTH(\"Master of Earth [10]\") Elemental Mastery (5)\nIncreases damage or healing of spells with elemental (earth, wind, wasser, fire) domain.\n  +3% damage/level\n   Master of Fire (10)  Elemental Mastery (3)  Increases the damage of fire attacks.\n +3% damage/level\n Master of Water (10)  Elemental Mastery (3)  Increases damage of water spells.\n +3% damage/level\n Master of Wind (10) Elemental Mastery (3)\nIncreases damage of wind spells.\n +3% damage/level\n Master of Earth (10) Elemental Mastery (3)\nIncreases damage of earth spells.\n +3% damage/level\n Spritual Mastery (5) Increases damage or healing of spells with the Holy or Dark domain.\n +5% damage/level\n Mindbreak (5) This is a buff which once it gets applied reduces the armor but increases the physical and magical attack of a Bestia.\n +20% damage/level\n-20% armor/level\n Mindfocus (5) This is a buff which once it gets applied increases the armor but decreases the physical and magical attack of a Bestia.\n +20% armor/level\n-20% damage/level\n Survival Tree The survival tree has three main ideas: protecting the masters Bestia from physical harm by increasing they tougness indirectly, improving the survivability in harsh environments for his Bestias or others.\nImproved Healing (10) Increases effects of healing done and duration of buff spells when used by the owner of this spell.\n +2% effect/level\n Increased Regeneration (10) Your Bestias and Masters HP and Mana will have an increased regeneration rate.\n +3% effect/level\n Magic Armor (5)  Improved Healing (5)  Reduces damage of magical effects.\n -2%/level reduced damage\n Faster Travel (5) Hard terrain does not reduce the Bestia movement speed anymore. On Level 5 the tarrain does not reduce movement speed anymore at all.\n -20%/level reduced movement reduction\n Taming (5) Bestias gain faster experience and are easier to catch.\n +5% experience gain per level\n Breeding (5) Summon Bestia (10) A temporarly Bestia from pure magic is created which will assist its master for a short period of time.\nTough Guy (5) Stamina is faster regenerated and drops slower in high demanding environments and while dong activities which would otherwise deplete your stamina.\n -10%/level reduced stamina reduction\n+10%/level increased stamina regeneration\n Packhorse Magic Shelter (5) Improves environment condition via magic.\nMagic Protection (5) Max Level: 5\nIncreases weight limit to carry.\n +5%/level Weight Limit increase\n Crafts Tree Improved Trading (5) NPC can be talked into to pay more or give the player cheaper prices for items.\n -5%/lv price reduction at NPCs\n+3%/lv higher price when selling at NPC\n Scavenger (10) When breaking up and recycling items the probability to recycle a higher amount of components is increased.\nBlacksmithing (10)  Scavenger (5)  Able to forge weaponry. Can also refine weapons. Increasing the spell does increase the chance to forge higher level weapons.\nAlso increases the probability by 2% to succeed when upgrading a weapon.\nEngineering (10) Magic Artisan (10) Can create magical artifacts.\nTransmutation (10) Science Tree The Science Tree contains skills witch help with sensing the world events and or performing rituals to even shape the face of the Bestia world itself. It basically forms 3 sub-trees: One is focused on attack learning, and enscribing, the second one helps with world exploration, and mana flow detection and control. And the third one is there for resource transformation/transmutation.\ngraph TD SPELL_ENSCRIPTION(\"Spell Enscription [10]\")--|min. 5|SPELL_BINDING(\"Spell Binding [10]\") SPELL_ENSCRIPTION--|min. 3|SPELL_DISCOVERY(\"Spell Discovery [10]\") SPELL_BINDING--|min. 5|FOCUS_BLACK(\"Focus: Black Magic [5]\") SPELL_DISCOVERY--|min. 5|FOCUS_BLACK SPELL_BINDING--|min. 5|FOCUS_WHITE(\"Focus: White Magic [5]\") SPELL_DISCOVERY--|min. 5|FOCUS_WHITE SPELL_BINDING--|min. 5|FOCUS_ARCANE(\"Focus: Arcane [5]\") SPELL_DISCOVERY--|min. 5|FOCUS_ARCANE GEOGRAPHY(\"Geography [5]\")--|min. 3|SCRY(\"Scry [5]\") SCRY--|min. 3|TELEPORT(\"Teleport [10]\") TELEPORT--|min. 8|PORTAL(\"Portal [10]\") Spell Enscription (10) Enables the user to write down spells onto items or scrolls for a later use (even by someone who does not know the spell).\nSpell Binding (10) Allows the user to bind certain spells to entities and create trigger for them. This can be used to permanently bind spells to artifacts or setup alarms or traps for example.\nSpell Discovery (10) Enables the user to discover spells to learn for his Bestias.\nFocus: Black Magic (5) Enables the user to discover spells to learn for his Bestias.\nFocus: White Magic (5) Enables the user to discover spells to learn for his Bestias.\nFocus: Arcane (5) Enables the user to discover spells to learn for his Bestias.\nGeography (5) Increases the range and effectivness when performing a cartography.\nScry (5) Can look into areas far away.\nTeleport (10) Can teleport own bestias over a distance. To teleport somewhere one needs to setup Teleport Runes which form some kind of magical anchor. They can be used as targets then trying to teleport. The teleportation gets harder and more error prone the longer distances are tried to travel. The teleported entity also gets a debuff which will prevent it from teleporting for some time.\nPortal (10) Can teleport any entity over a distance. To teleport somewhere one needs to setup Portal Runes which form some kind of magical anchor. As soon as a portal has opened it can be used in both directions for some time.\nControl Mana Flow (10) User is able to channel down the Mana to crystalize into small shards of Mana crystals which can be used as a power source throughout the world.\nMagic Senses (5) Detect presence of magic.\nIdentify Magic (5) "});index.add({'id':16,'href':'/docs/mechanics/bestia/','title':"Bestias",'content':"Bestias In areas with high mana concentration, so-called mini rift events are formed. At these neuralgic points, Bestia are materialized and enter the respective worlds. They are basically automatically spawning on the map with a higher probability where the mana concentration is higher.\nThe type of the Bestia which spawns is determined by the environments (Bestias have a affinity to certain biomes and they spawn according to this probability in the different biomes).\nCatching Bestias In order to catch Bestia you need Magic Bestia Traps. This items are manufactured via the apropriate crafting skill. Bestias catch chance can be increased by reducing its HP. If the HP is 1% the catch chance is increased by 30%. It can also changed by applying buffs or debuffs.\n   Trap Bestia Lv. 1 - 20 21 - 40 41-60 61-100 100+     Bestia Trap 60% 20% -20% -60% -60% - (LV - 100)   Super Trap 100% 60% 20% -20% -20% - (LV - 100)   Mega Trap 140% 100% 60% 20% 20% - (LV - 100)   Master Trap 180% 140% 100% 60% 60% - (LV - 100)    You can also increase the chance of catching by   \\(\u0026#43;\\frac{WILL}{50}\\)  of the trap user.\nBreeding Bestias can be bred in order to improve certain statistics. The player can pair certain individuals of Bestia in order to produce offspring. In order to breed a Bestia the following criteria must be met:\n A male and female is required Bestias of the same kind (humanoid, formless etc.) can be bread Bestia need a minimum level of 10 in order to breed them.  In order to breed two Bestia one male and one female must be put together in a breeder which needs to be build and put onto the map. After a waiting time which is determined by its original level an egg is produced. The breeding time until an egg is produced is given by:\n \\[ t_{breed} [s_{real}] = (3 \\cdot 24 \\cdot 3600) \\cdot \\frac{lv_1 \\cdot lv_2}{2}\\]  The Bestia species produced will always be the species of the female breeding partner.\nThe hatch time of the egg is given is given in normal time and is determined by:\n \\[ t_{hatch} [s_{real}] = rand(0.9, 1.0) \\cdot (5 \\cdot 24 \\cdot 3600) \\cdot \\frac{lv_1 \\cdot lv_2}{2}\\]  Individual Value Evolution The Bestia spawned from the process will have its Individual Values (IV) determined like this algorithm:\n Pick two random IVs pairs from each of the parents. From these IVs use the highest value from each parent. With 70% the picked IV is 10% higher, with 20% its the same and with 10% its 10% lower.  As you can see there is a good chance that the resulting IV is higher then bevore. Breeding can therefore easily be used in order to improve Bestia.\nLearnable Attacks The father Bestia has a chance to transfer up to three attacks towards its offspring. Depending on the season of the year, out of 25 attacks are picked to allow the player some control over the selected attacks.\n   Attack Lv. Range Season Of Breeding     1 - 25 Spring   26 - 50 Summer   51 - 75 Fall   76 - 100 Winter    Up to three attacks from this range is selected and then with a chance of 30 % each of this attacks the attack is transfered to the female if it can not learn this attack on their own. If she learns this attack on a higher level it will now learn the attack by the level of the father.\nWith a chance of 30 % the attack is learned one level earlier then before.\n"});index.add({'id':17,'href':'/docs/','title':"Docs",'content':""});index.add({'id':18,'href':'/docs/mechanics/environment/','title':"Environment",'content':"Environment Bestia uses a sophisticated temperature and environment system to drive weather simulation and the effects on the players environment.\nThese simulations should be based on certain basic values which are determined location-dependent, but can be changed by interaction with the players. Also natural changes through the world (seasons) should lead to an adjustment of these values. Due to the changes of the environmental values tiles have to be adapted to the world itself. These have to be adjusted anyway if they should change due to other local effects like fire or mining. The client must be informed about adjusted tiles.\n Bestia Master enter the current world from another, not further mentioned dimension. During each incarnation a name of this world is generated and in each cycle all Bestia Master entering the game will have this world name persisted in their account data to keep a record.\n Temperature Each Bestia has a certain sweet spot of tolerable temperature. There are several kind of base temperature ranges in which Bestia thrive:\n   Temperature Kind Base Temperature Range [°C]     Low Temperature -20 - 15   Medium Temperature 10 - 30   High Temperature 25 - 45    Vitality and Willpower increases resistenace against the temperatures. Specialized equipments or status effects can also affect temperature resistence.\nThe formular is as follows:\n  \\[ T_{tolerable} \u0026#43;= T_{base} \u0026#43; \\sqrt{\\text{VIT}} / 2 \\cdot \\sqrt{\\text{WILL}} / 4\\]  For items and structures these calculation is a bit different. Usually these items have some threshold above or under which they will start to malfunction (or perhaps even catch fire!).\nWeather The weather system in Bestia plays a crucial role. It also affects the visibility and also the behavior of the NPC and mobs. Depending on the weather the NPCs and the player character will need a improved shelter or equipment to avoid a loss of stamina.\nThe weather influences also the temperature which will in turn decide if and how much stamina a entity regenerates or loses.\nThe weather will also play a role in which crops and plants grow. If the player decided to plant salad in the desert this won\u0026rsquo;t work quite well.\nRain A in strength controllable rain effect should overlay the entire viewport. The rain blowing direction should correlate with the wind direction (which will be more or less random). During rain the ground will show a wet effect and view distance is reduced. It also reduces the effectiveness of fires and might extingush them. Fire attacks will lose certain strengths in a very wet environment (like burning effects won\u0026rsquo;t last very long).\nFog Clouds of fog will move slowly over the map. And the sight of the AI entities is reduced. Its will also get harder for a player to see.\nNight During night time the player will need light sources in order to improve the visibility of enemies or terrain. There will be certain items (e.g. torches, candles etc.) as well as spells to make light.\nIngame Time The time in the Bestia game is faster then the real world time. When we refer to the faster in-game time we will call it Bestia time, if we refer to the normal time we call it real time.\nChanging seasons should lead to an impression of the changeability of the world. You have to adapt to a periodically changing environment. Things that work in summer may not be possible in winter. But so that the players don\u0026rsquo;t have to wait for a real year, time in Bestia flies faster.\nThe bestia time starts at the creation of the bestia world. It is basically three times faster then the usual time. This means that the normal bestia day has 8 hours in real time.\nThis means that the bestia month has 10 days in real time and an bestia year is 4 month in real time.\n Bestia year: 4 months Bestia seasion: summer, winter, fall, spring: each 1 month Bestia day: 8 hours  This allows the player to see multiple day-night cycles on the same day while allowing him to play for a considerable time so he can actually do something meaningful until the sun rises again.\n If it turns out that the night period is too annyoing for the players because of the limited amount of gameplay then the night might get shortened.\n This caluclation results in the following example timespans:\n   Bestia Time Real Time     3 h 1 h   12 d 4 d   1 yr 4 mon    The Threat After a random period of time (at least 6 months in real time), a threats starts to appear in every world incarnation. These can be threats from particularly strong Bestia, which cause great destruction, but also magical elements or natural disasters such as meteorites. Under certain conditions, this event can also contribute to the destruction of the world. If the total destruction is caused by the event itself then none of the cults will benefit from it. So it is in the interest of the cult players to avert this threat together.\nPopulation \u0026lt; 1k delay = 9 + rand() * 1.5; Population \u0026lt; 5k delay = 9 + rand() * 2.5; Population \u0026gt; 5k delay = 9 + rand() * 4;  A threat does not necessarily have to be perceived directly. A meteor, or severe flooding, can take place far away, changing parts of the world without much of the player community noticing but permanently shaping and changing the world. A subtle fear of this event creeping up should always haunt players.\nNot described events:\n Vulcanic Activity Tsunami / Permanent Flooding Metorite Impact Iceage The Great Drought Mana Burn The Destroyer (a Bestia targeting player cities)  Rift Event Starting in areas with big mana presence a first rift opens up. These are detactable with Spells which reveal big mana concentrations and also can be detected by special rift detection spells or devices. This should allow the player to aproximatly pin point the rift origin.\nMana Crystal Infestation In areas with a very high mana concentration a Mana Infestation can manifest. It increases mana generation in the area and depending on the concentation is will spawn new crystals next to it. The crystals damage every creature or structure in its vicinity, eventually consuming more and more of the planet destroying everything.\nThe crystals itself can be destroyed. Everything which drains mana or banishes it is helpful to reduce the crystals.\nWorld Exploration A large part of the game world is generated automatically. There should be a motivation for players in exploring the world. New areas can be mapped and unique resources can be discovered and explored. In general, players should have their own branch about the secrets of the world to discover new items and how they are created. The entire world must gradually be explored and mapped by players. A hidden map has to be uncovered regularly. Players will be able to view this map online and see the overall progress of the exploration.\nPossible events can then also be announced on this public map. Every player should be able to create a world map in-game. Special cartographers should be able to combine these maps or generate new magic maps to inform about possible events (exchange information with friends via markers, or display certain resource sources).\nTo make even more impact the explored maps are very needed by the general player population in order to preciesly target locations or send Bestias into the area for certain AI controlled missions. The maps, once created, can thus be copied and sold by the cartographer. Regular player might try to create copies but this will be very hard without a cartography skill and most likly fail.\nExploring of the land should be a fun process but not so easy as going into the wild and pressing one simple button.\nFor generating the visual of the player map we use the algorithm described in Terrain Map Generation and its respective Github repository\nCartography In the game you should be able to make and acquire maps. These should be strongly interwoven with the game mechanics, so that it can pay off to own a good map. It should also give the players an incentive to actively explore the world.\nThe player has to walk into the wilderness and then use his cartography skill. He can choose how wide the area to measure should be. Bigger areas will tend to be more error prone. Also the further away the player is from already explored land the harder the sucessfull performing of the skill will be.\nIf the skill fails the player will need to wait for a certain amount of time in order to perform the skill again in the vicinity. The cooldown is reduced for adjacent areas.\nThe server must validate the button presses of the player to make it harder to cheat the system.\nThe algorithm for the carthography is:\n Upon using the skill a difficulty d is determined, depending on the distance to the next already cartographed area and the area wished to be explored. There are 3-5 locations l spawned around the player within a radius of 300 to 800 meters around the player (depending on the difficulty). He must reach them within a timelimit t. When near one of such a location (5m) the player is given a moving compass graphic. The speed of moving needle and the area to hit via button press is calculated based on d.  "});index.add({'id':19,'href':'/docs/mechanics/items/','title':"Items",'content':"Items Items can be optained by the player and carried around. The amount of items limited to each entity is determined via its Inventory. Each Bestia (and also a lot of other entities), have their own inventory with different sizes.\nItems are mostly crafted by the players. Its quite rare to obtain direct item drops from killed enemies. Instead its very common to loot resources when enemies are killed.\nEach item has a level assigned. This level is important to determine how hard or easy it is to forge this item, upgrade it and so on. It also effects how spells interact with the item entity.\nItem Category Items are grouped into three categories and inside this documentation often refered to via its category.\n   Item Level Category     1 - 20 Mundane   21 - 80 Superior   81 - 100 Legendary   101+ Epic    Weapon Refinement Weapons and armors can be refined which accounts to extra damage dealt if the weapon is used. Each upgrade step can result in a destruction of the equipment.\nA refined weapon has increased base damage per level:\n   Weapon Category Base Damage Bonus / Upgrade Level     Mundane 2   Superior 4   Legendary 6   Epic 10    Uprade Chances These are the base upgrade chances. The chances can be altered via skills or item usages. If a upgrade fails the weapon is destroyed. It is then complelty unusable and also the resources are lost.\n   Weapon Category Uprade Formula     Mundane    \\( min(1, e^{-(itemLv-5)/9.8)})\\)     Superior  \\( min(1, e^{-(itemLv-4)/8.69)})\\)     Legendary  \\( min(1, e^{-(itemLv-3)/7.69)})\\)     Epic  \\( min(1, e^{-(itemLv-2)/7.31)})\\)      The refine level is not capped but each higher refinement process can destroy the weapon/equipment with an increasing chance. The chance of success is depending on skill and refine items used.\nA refined armor has increased resistance for hard defense. Each upgrade point grants ⅓ points more defense.\nThe upgrade chances can be increased by leveling up the Skill Mastery Upgrade Mastery.\nItem Crafting Bestia uses an innovative new item crafting. The player is basically is allowed to craft all items. Some items however might be so hard to craft so it is not possible to craft it without appropriate skill. Some items may require special ingredients which can not be substituted. The higher the crafted item level and the harder it get to successful craft it. If the crafting of the item fails all the materials used to craft it are lost. In order to craft an item two things are important: the sum of raw materials used to craft and how the materials are laid out.\nItem craft success chance is determined if the raw materials.\nAfter an item was successfully crafted the recipe is saved for the user inside his recipe list. From this list the recipe can be inscribed upon a paper to give it to other players who can consume and learn it. The learning will take some time (depending of the level of the item).\nPlayers are encouraged to try and create stuff. There are basically 6 domains of craftable and user generatable content in the world of Bestia, and are related to the linked Skill Mastery.\n Weapons (Blacksmith: Weapon) Armor (Blacksmith: Armor) Magical Artifacts (Scholar: Crafting) Potions and Usables (Alchemy Mastery) Meals (Cooking) Buildings, Traps and non magical devices (Engineering)  Alchemy The brewing is a time consuming process. The process should be somehow deterministic so the results are logically to be obtained.\nOnce a receipt was discovered it is saved for the user so it can be reused very quickly. If a player repeatedly makes the same receipt the quality of the produced potions increases over time. The player can choose to write down the receipt and give it to other players who might increase their skill by reading it.\nCraft Duration Craft duration is determined by the item level which the player wants to craft. Skill points in the suitable skill tree (weapon, equipment, construction or alchemy, artifacts) reduces the build time. The baseDuration is given in real time minutes.\nbaseDuration = 28.8 * itemLevel Item and Entity Interactions It should be possible to link items to entities. Nesting should be possible. With this technique it is possible to combine active items.\nIts possible to do something like:\n Attaching or removing energy crystals to a magical artifact Boxes that can be stuffed with other items for shipping  For this purpose the items that can be stored in an entity must be limited. Filtering must be very flexible, be able to exclude certain items, be able to limit weight, etc. Each item also has its own resistance values. As soon as a Bestia is killed it will be checked if and if so how much damage individual items take. Even items lying on the ground can be damaged or even destroyed by attacks.\nDamaging of Items As with any item in Bestia, it can be damaged. There will be professions capable of repairing items. The durability of an item is given via a percentage. Items will function normally within a wide range of their condition. At a certain level, they slowly lose their properties (armor their armor value, weapons hit less often, magic staffs suffer a damage penalty, etc.). Until the items become unusable. If you then inflict further damage on them, they can be completely and irretrievably destroyed.\n   Durability State     30 - 100% Normal Operation   1 - 29% Increasing Damage Effects   0% Item breaks unrecoverably    Items on the ground can suffer damage from attacks. They are affected by Area Of Effect spells and can be targetted manually albeit they are not auto targeted like enemies.\nItem Status Values In order to let items participate in the battle system they need status values. Items status value distribution is based upon their type (weapon, potion, book etc) and the total amount of points to distribute is given by the item level. Later there might be items which get preset custom values but for now on they are based upon a lookup table.\nInventory The inventory is an important system for interaction between the player and the game mechanics. It must be easy to access and logical build. Each Bestia has its own inventory. So the player must be careful to exchange items between the Bestias in time. Trading must be fast to do to reduce the annoyance.\nIf a Bestia/Entity is killed and has had some items inside its inventory usually the items are dropped and can be looted. In case a player killed a mob the loot will be protected for 30 seconds so he can exclusivly loot it.\nWeight Limit Items weight is given by units of about 1kg per unit. The smallest division is 0.1 units which aproximates to 100gr. The maximum amount a Bestia can carry is dependent on its strength and its vitality. The Packhorse skill can increase the carriable weight limit. The formula is given as:\nlimit = STR / 2 + VIT / 5 + 15 + LEVEL / 10 Please not that depending of your used up weight limit regeneration of certain status values might be affected.\n"});})();